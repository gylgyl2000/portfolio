"use strict";(self.webpackChunkmon_web_dev_wiki=self.webpackChunkmon_web_dev_wiki||[]).push([[5456],{82922:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return t},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return m},default:function(){return u}});var l=a(87462),r=a(63366),s=(a(67294),a(3905)),i=["components"],t={sidebar_position:2},o="OpenClassrooms",d={unversionedId:"Aide-memoire/JavaScript/OpenClassrooms",id:"Aide-memoire/JavaScript/OpenClassrooms",title:"OpenClassrooms",description:"Fiche - Javascript",source:"@site/docs/Aide-memoire/JavaScript/OpenClassrooms.mdx",sourceDirName:"Aide-memoire/JavaScript",slug:"/Aide-memoire/JavaScript/OpenClassrooms",permalink:"/Mon_Web_Dev_Wiki/docs/Aide-memoire/JavaScript/OpenClassrooms",editUrl:"https://github.com/gylgyl2000/Mon_Web_Dev_Wiki/edit/master/website/docs/Aide-memoire/JavaScript/OpenClassrooms.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"AideMemoireSidebar",previous:{title:"Accueil",permalink:"/Mon_Web_Dev_Wiki/docs/Aide-memoire/JavaScript/accueil"},next:{title:"devhints",permalink:"/Mon_Web_Dev_Wiki/docs/Aide-memoire/JavaScript/devhints"}},m=[{value:"Variables <code>let</code>",id:"variables-let",children:[{value:"Cr\xe9er, d\xe9clarer, initialiser",id:"cr\xe9er-d\xe9clarer-initialiser",children:[],level:3},{value:"Modifier la valeur",id:"modifier-la-valeur",children:[],level:3},{value:"Addition et soustraction",id:"addition-et-soustraction",children:[],level:3},{value:"Multiplication et division",id:"multiplication-et-division",children:[],level:3},{value:"Mutabilit\xe9 des variables",id:"mutabilit\xe9-des-variables",children:[],level:3}],level:2},{value:"Constantes <code>const</code>",id:"constantes-const",children:[],level:2},{value:"Types primitifs d&#39;une variable ou d&#39;une constante",id:"types-primitifs-dune-variable-ou-dune-constante",children:[{value:"number",id:"number",children:[],level:3},{value:"boolean",id:"boolean",children:[],level:3},{value:"string",id:"string",children:[],level:3}],level:2},{value:"Les objets",id:"les-objets",children:[],level:2},{value:"Les classes",id:"les-classes",children:[],level:2},{value:"Les tableaux",id:"les-tableaux",children:[{value:"<code>.length</code>",id:"length",children:[],level:3},{value:"<code>.push</code>",id:"push",children:[],level:3},{value:"<code>.unshift</code>",id:"unshift",children:[],level:3},{value:"<code>.pop</code>",id:"pop",children:[],level:3},{value:"<code>if</code>/<code>else</code>",id:"ifelse",children:[],level:3},{value:"<code>.forEach()</code>",id:"foreach",children:[],level:3}],level:2},{value:"Expressions de comparaison",id:"expressions-de-comparaison",children:[{value:"\xc9galit\xe9s <code>==</code> <code>===</code>",id:"\xe9galit\xe9s--",children:[],level:3},{value:"Conditions multiples",id:"conditions-multiples",children:[],level:3}],level:2},{value:"Scope (port\xe9e) des variables",id:"scope-port\xe9e-des-variables",children:[],level:2},{value:"<code>switch</code>",id:"switch",children:[],level:2},{value:"Boucles",id:"boucles",children:[{value:"<code>for</code>",id:"for",children:[],level:3},{value:"<code>for</code> <code>in</code>",id:"for-in",children:[],level:3},{value:"<code>for</code> <code>of</code>",id:"for-of",children:[],level:3},{value:"<code>while</code>",id:"while",children:[],level:3}],level:2},{value:"Gestion des erreurs",id:"gestion-des-erreurs",children:[{value:"<code>if</code> <code>else</code>",id:"if-else",children:[],level:3},{value:"<code>try</code> <code>catch</code>",id:"try-catch",children:[],level:3}],level:2},{value:"Fonction",id:"fonction",children:[],level:2},{value:"Classe",id:"classe",children:[{value:"M\xe9thode d&#39;instance",id:"m\xe9thode-dinstance",children:[],level:3},{value:"M\xe9thode statique",id:"m\xe9thode-statique",children:[],level:3}],level:2}],c={toc:m};function u(e){var n=e.components,t=(0,r.Z)(e,i);return(0,s.mdx)("wrapper",(0,l.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.mdx)("h1",{id:"openclassrooms"},"OpenClassrooms"),(0,s.mdx)("p",null,(0,s.mdx)("img",{alt:"Fiche - Javascript",src:a(88229).Z,width:"1870",height:"1324"})),(0,s.mdx)("h2",{id:"variables-let"},"Variables ",(0,s.mdx)("inlineCode",{parentName:"h2"},"let")),(0,s.mdx)("h3",{id:"cr\xe9er-d\xe9clarer-initialiser"},"Cr\xe9er, d\xe9clarer, initialiser"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"let numberOfSeasons = 6;\nlet numberOfEpisodes = 12;\n")),(0,s.mdx)("h3",{id:"modifier-la-valeur"},"Modifier la valeur"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"let numberOfCats = 3;\nnumberOfCats = 4;\n")),(0,s.mdx)("h3",{id:"addition-et-soustraction"},"Addition et soustraction"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"let totalCDs = 67;\nlet totalVinyls = 34;\nlet totalMusic = totalCDs + totalVinyls;\n\nlet cookiesInJar = 10;\nlet cookiesRemoved = 2;\nlet cookiesLeftInJar = cookiesInJar - cookiesRemoved;\n\nlet cookiesInJar = 10;\n/* manger deux cookies */\ncookiesInJar -= 2; //il reste 8 cookies\n/* cuisson d'un nouveau lot de cookies */\ncookiesInJar += 12; // il y a maintenant 20 cookies dans la bo\xeete\n\nlet numberOfLikes = 10;\nnumberOfLikes++; // cela fait 11\nnumberOfLikes--; // et on revient \xe0 10...\n")),(0,s.mdx)("h3",{id:"multiplication-et-division"},"Multiplication et division"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"let costPerProduct = 20;\nlet numberOfProducts = 5;\nlet totalCost = costPerProduct * numberOfProducts;\nlet averageCostPerProduct = totalCost / numberOfProducts;\n\nlet numberOfCats = 2;\nnumberOfCats *= 6; // numberOfCats vaut maintenant 2*6 = 12;\nnumberOfCats /= 3; // numberOfCats vaut maintenant 12/3 = 4;\n")),(0,s.mdx)("h3",{id:"mutabilit\xe9-des-variables"},"Mutabilit\xe9 des variables"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"let compteur = 0;\ncompteur++;\ncompteur = 10;\n")),(0,s.mdx)("h2",{id:"constantes-const"},"Constantes ",(0,s.mdx)("inlineCode",{parentName:"h2"},"const")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"const nombrePostParPage = 20;\nnombrePostParPage = 30; // Retournera une erreur dans la console car on ne peut plus changer sa valeur\n")),(0,s.mdx)("h2",{id:"types-primitifs-dune-variable-ou-dune-constante"},"Types primitifs d'une variable ou d'une constante"),(0,s.mdx)("h3",{id:"number"},"number"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"let integerCalculation = 1 + 2; // donne 3\nlet weirdCalculation = 0.1 + 0.2;  // on attend 0.3, r\xe9ponse r\xe9elle 0.30000000000000004\n")),(0,s.mdx)("h3",{id:"boolean"},"boolean"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"let userIsSignedIn = true;\nlet userIsAdmin = false;\n")),(0,s.mdx)("h3",{id:"string"},"string"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'let firstName = "Will";\nlet lastName = \'Alexander\';\n\nlet wholeName = firstName + " " + lastName;  // valeur: "Will Alexander"\n\nconst myName = `Alexander`;\nconst salutation = `Bienvenue sur mon site ${myName}!`;\nconsole.log(salutation); //retournera \u201cBienvenue sur mon site Alexander!\u201d\n')),(0,s.mdx)("h2",{id:"les-objets"},"Les objets"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'let myBook = {\n    title: \'The Story of Tau\',\n    author: \'Will Alexander\',\n    numberOfPages: 250,\n    isAvailable: true\n};\n\nlet bookTitle = myBook.title; // "L\'Histoire de Tao"\nlet bookPages = myBook.numberOfPages  // 250\n\nlet bookTitle = myBook["title"]; // "L\'Histoire de Tao"\nlet bookPages = myBook["numberOfPages"];  // 250\n\nlet propertyToAccess = "title"\nlet bookTitle = myBook[propertyToAccess];  // "L\'Histoire de Tao"\n')),(0,s.mdx)("h2",{id:"les-classes"},"Les classes"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'class Book {\n    constructor(title, author, pages) {\n        this.title = title;\n        this.author = author;\n        this.pages = pages;\n    }\n}\n\nlet myBook = new Book("L\'Histoire de Tao", "Will Alexander", 250);\n/* Cette ligne cr\xe9e l\'objet suivant : */\n{\n    title: "L\'Histoire de Tao",\n    author: "Will Alexander",\n    pages: 250\n}\n')),(0,s.mdx)("h2",{id:"les-tableaux"},"Les tableaux"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'let guests = ["Sarah Kate", "Audrey Simon", "Will Alexander"];\n\nlet firstGuest = guests[0]; // "Sarah Kate"\nlet thirdGuest = guests[2]; // "Will Alexander"\nlet undefinedGuest = guests[12] // undefined\n')),(0,s.mdx)("h3",{id:"length"},(0,s.mdx)("inlineCode",{parentName:"h3"},".length")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'let guests = ["Will Alexander", "Sarah Kate", "Audrey Simon"];\nlet howManyGuests = guests.length; // 3\n')),(0,s.mdx)("h3",{id:"push"},(0,s.mdx)("inlineCode",{parentName:"h3"},".push")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'guests.push("Tao Perkington"); // ajoute "Tao Perkington" \xe0 la fin de notre tableau guests\n')),(0,s.mdx)("h3",{id:"unshift"},(0,s.mdx)("inlineCode",{parentName:"h3"},".unshift")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'guests.unshift("Tao Perkington"); // "Tao Perkington" est ajout\xe9 au d\xe9but du tableau guests\n')),(0,s.mdx)("h3",{id:"pop"},(0,s.mdx)("inlineCode",{parentName:"h3"},".pop")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"guests.pop(); // supprimer le dernier \xe9l\xe9ment du tableau\n")),(0,s.mdx)("h3",{id:"ifelse"},(0,s.mdx)("inlineCode",{parentName:"h3"},"if"),"/",(0,s.mdx)("inlineCode",{parentName:"h3"},"else")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'let UserLoggedIn = true;\nif (UserLoggedIn) {\n    console.log("Utilisateur connect\xe9!");\n} else {\n    console.log("Alerte, intrus!");\n}\n')),(0,s.mdx)("h3",{id:"foreach"},(0,s.mdx)("inlineCode",{parentName:"h3"},".forEach()")),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach"},"Array.prototype.forEach() - JavaScript | MDN")),(0,s.mdx)("p",null,"La m\xe9thode ",(0,s.mdx)("strong",{parentName:"p"},(0,s.mdx)("inlineCode",{parentName:"strong"},"forEach()"))," permet d'ex\xe9cuter une fonction donn\xe9e sur chaque \xe9l\xe9ment du tableau."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"const array1 = ['a', 'b', 'c'];\n\narray1.forEach(element => console.log(element));\n\n// expected output: \"a\"\n// expected output: \"b\"\n// expected output: \"c\"\n")),(0,s.mdx)("h2",{id:"expressions-de-comparaison"},"Expressions de comparaison"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("inlineCode",{parentName:"li"},"<"),"\xa0inf\xe9rieur \xe0 ;"),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("inlineCode",{parentName:"li"},"<="),"\xa0inf\xe9rieur ou \xe9gal \xe0 ;"),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("inlineCode",{parentName:"li"},"=="),"\xa0\xe9gal \xe0 ;"),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("inlineCode",{parentName:"li"},">="),"\xa0sup\xe9rieur ou \xe9gal \xe0 ;"),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("inlineCode",{parentName:"li"},">"),"\xa0sup\xe9rieur \xe0 ;"),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("inlineCode",{parentName:"li"},"!="),"\xa0diff\xe9rent de.")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"const numberOfSeats = 30;\nconst numberOfGuests = 25;\nif (numberOfGuests < numberOfSeats) {\n    // autoriser plus d'invit\xe9s\n} else {\n    // ne pas autoriser de nouveaux invit\xe9s\n}\n\nif (numberOfGuests == numberOfSeats) {\n    // tous les si\xe8ges sont occup\xe9s\n} else if (numberOfGuests < numberOfSeats) {\n    // autoriser plus d'invit\xe9s\n} else {\n// ne pas autoriser de nouveaux invit\xe9s\n}\n\n")),(0,s.mdx)("h3",{id:"\xe9galit\xe9s--"},"\xc9galit\xe9s ",(0,s.mdx)("inlineCode",{parentName:"h3"},"==")," ",(0,s.mdx)("inlineCode",{parentName:"h3"},"===")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'5 == "5" // true\n5 === "5" //false\n')),(0,s.mdx)("h3",{id:"conditions-multiples"},"Conditions multiples"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("inlineCode",{parentName:"li"},"&&"),"\xa0\u2013 ET logique \u2013 pour v\xe9rifier si deux conditions sont ",(0,s.mdx)("strong",{parentName:"li"},"toutes les deux")," vraies ;"),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("inlineCode",{parentName:"li"},"||"),"\xa0\u2013 OU logique \u2013 pour v\xe9rifier si ",(0,s.mdx)("strong",{parentName:"li"},"au moins une")," condition est vraie ;"),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("inlineCode",{parentName:"li"},"!"),"\xa0\u2013 NON logique \u2013 pour v\xe9rifier si une condition n'est ",(0,s.mdx)("strong",{parentName:"li"},"pas")," vraie.")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"let userLoggedIn = true;\nlet hasUserPremiumAccount = true;\nlet userHasMegaPremiumAccount = false;\nuserLoggedIn && userHasPremiumAccount; // true\nuserLoggedIn && userHasMegaPremiumAccount; // false\nuserLoggedIn || userHasPremiumAccount; // true\nuserLoggedIn || userHasMegaPremiumAccount; // true\n!userLoggedIn; // false\n!userHasMegaPremiumAccount; // true\n")),(0,s.mdx)("h2",{id:"scope-port\xe9e-des-variables"},"Scope (port\xe9e) des variables"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"let userLoggedIn = true;\nif (userLoggedIn) {\n    let welcomeMessage = 'Welcome back!';\n} else {\n    let welcomeMessage = 'Welcome new user!';\n}\nconsole.log(welcomeMessage); // renvoie une erreur\n")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"let userLoggedIn = true;\nlet welcomeMessage = ''; // d\xe9clarer la variable ici\nif (userLoggedIn) {\n    welcomeMessage = 'Welcome back!'; // modifier la variable ext\xe9rieure\n} else {\n    welcomeMessage = 'Welcome new user!'; // modifier la variable ext\xe9rieure\n}\nconsole.log(welcomeMessage); // imprime 'Welcome back!'\n")),(0,s.mdx)("h2",{id:"switch"},(0,s.mdx)("inlineCode",{parentName:"h2"},"switch")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"let firstUser = {\n    name: \"Will Alexander\",\n    age: 33,\n    accountLevel: \"normal\"\n};\nlet secondUser = {\n    name: \"Sarah Kate\",\n    age: 21,\n    accountLevel: \"premium\"\n};\nlet thirdUser = {\n    name: \"Audrey Simon\",\n    age: 27,\n    accountLevel: \"mega-premium\"\n};\n\nswitch (firstUser.accountLevel) {\n    case 'normal':\n        console.log('You have a normal account!');\n    break;\n    case 'premium':\n        console.log('You have a premium account!');\n    break;\n    case 'mega-premium':\n        console.log('You have a mega premium account!');\n    break;\n    default:\n    console.log('Unknown account type!');\n}\n")),(0,s.mdx)("h2",{id:"boucles"},"Boucles"),(0,s.mdx)("h3",{id:"for"},(0,s.mdx)("inlineCode",{parentName:"h3"},"for")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'const numberOfPassengers = 10;\nfor (let i = 0; i < numberOfPassengers; i++) {\n    console.log("Passager embarqu\xe9 !");\n}\nconsole.log("Tous les passagers sont embarqu\xe9s !");\n')),(0,s.mdx)("h3",{id:"for-in"},(0,s.mdx)("inlineCode",{parentName:"h3"},"for")," ",(0,s.mdx)("inlineCode",{parentName:"h3"},"in")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'const passengers = [\n    "Will Alexander",\n    "Sarah Kate\'",\n    "Audrey Simon",\n    "Tao Perkington"\n]\nfor (let i in passengers) {\n    console.log("Embarquement du passager " + passengers[i]);\n}\n')),(0,s.mdx)("h3",{id:"for-of"},(0,s.mdx)("inlineCode",{parentName:"h3"},"for")," ",(0,s.mdx)("inlineCode",{parentName:"h3"},"of")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'const passengers = [\n    "Will Alexander",\n    "Sarah Kate",\n    "Audrey Simon",\n    "Tao Perkington"\n]\nfor (let passenger of passengers) {\n    console.log("Embarquement du passager " + passenger);\n}\n')),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'const passengers = [\n    {name: "Will Alexander", ticketNumber: 209542},\n    {name: "Sarah Kate", ticketNumber: 169336},\n    {name: "Audrey Simon", ticketNumber: 779042},\n    {name: "Tao Perkington", tiketNumber: 703911}\n]\nfor (let passenger of passengers) {\n    console.log(\'Embarquement du passager \' + passenger.name + \' avec le ticket num\xe9ro \' + passenger.ticketNumber);\n}\n')),(0,s.mdx)("h3",{id:"while"},(0,s.mdx)("inlineCode",{parentName:"h3"},"while")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"let seatsLeft = 10;\nlet passengersStillToBoard = 8;\nlet passengersBoarded = 0;\nwhile (seatsLeft > 0 && passengersStillToBoard > 0) {\n    passengersBoarded++; // un passager embarque\n    passengersStillToBoard--; // donc il y a un passager de moins \xe0 embarquer\n    seatsLeft--; // et un si\xe8ge de moins\n}\nconsole.log(passengersBoarded); // imprime 8, car il y a 8 passagers pour 10 si\xe8ges\n")),(0,s.mdx)("h2",{id:"gestion-des-erreurs"},"Gestion des erreurs"),(0,s.mdx)("h3",{id:"if-else"},(0,s.mdx)("inlineCode",{parentName:"h3"},"if")," ",(0,s.mdx)("inlineCode",{parentName:"h3"},"else")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"if (dataExists && dataIsValid) {\n    // utiliser les donn\xe9es ici\n} else {\n    // g\xe9rer l'erreur ici\n}\n")),(0,s.mdx)("h3",{id:"try-catch"},(0,s.mdx)("inlineCode",{parentName:"h3"},"try")," ",(0,s.mdx)("inlineCode",{parentName:"h3"},"catch")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"try {\n    // code susceptible \xe0 l'erreur ici\n} catch (error) {\n    // r\xe9action aux erreurs ici\n}\n")),(0,s.mdx)("h2",{id:"fonction"},"Fonction"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"function nomDeLaFonction(parametres) {\n    code;\n}\n\nfunction somme(nombre1, nombre2) { // nombre1 et nombre2 sont les param\xe8tres\n    return nombre1 + nombre2; // valeur de retour\n}\n\nsomme(3,4); // 3 et 4 sont des arguments\n")),(0,s.mdx)("h2",{id:"classe"},"Classe"),(0,s.mdx)("h3",{id:"m\xe9thode-dinstance"},"M\xe9thode d'instance"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'class BankAccount {\n    constructor(owner, balance) {\n        this.owner = owner;\n        this.balance = balance;\n    }\n    showBalance() {\n        console.log("Solde: " + this.balance + " EUR");\n    }\n    deposit(amount) {\n        console.log("D\xe9p\xf4t de " + amount + " EUR");\n        this.balance += amount;\n        this.showBalance();\n    }\n    withdraw(amount) {\n        if (amount > this.balance) {\n            console.log("Retrait refus\xe9 !");\n        } else {\n            console.log("Retrait de " + amount + " EUR");\n            this.balance -= amount;\n            this.showBalance();\n        }\n    }\n}\n')),(0,s.mdx)("h3",{id:"m\xe9thode-statique"},"M\xe9thode statique"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},"const randomNumber = Math.random(); // cr\xe9e un nombre al\xe9atoire sur l'intervalle \\[0, 1\\]\n\nconst roundMeDown = Math.floor(495.966); // arrondit vers le bas \xe0 l'entier le plus proche, renvoie 495\n")),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-javascript"},'class BePolite {\n    static sayHello() {\n        console.log("Hello!");\n    }\n    static sayHelloTo(name) {\n        console.log("Hello " + name + "!");\n    }\n    static add(firstNumber, secondNumber) {\n        return firstNumber + secondNumber;\n    }\n}\n\nBePolite.sayHello(); // imprime "Hello!"\n\nBePolite.sayHelloTo("Will"); // imprime "Hello Will!"\n\nconst sum = BePolite.add(2, 3); // sum = 5\n')))}u.isMDXComponent=!0},88229:function(e,n,a){n.Z=a.p+"assets/images/16309151275577_Fiche-Javascript-54e9abb7a5b8fd630c57fabce7e58c60.png"}}]);