"use strict";(self.webpackChunkmon_web_dev_wiki=self.webpackChunkmon_web_dev_wiki||[]).push([[2571],{3:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return o},contentTitle:function(){return m},metadata:function(){return u},toc:function(){return d},default:function(){return p}});var t=a(87462),r=a(63366),l=(a(67294),a(3905)),i=(a(9877),a(58215),a(56222)),s=["components"],o={id:"3-Parallelisez_vos_longues_taches_avec_la_programmation_asynchrone",title:"Parall\xe9lisez vos longues t\xe2ches avec la programmation asynchrone"},m="Parall\xe9lisez vos longues t\xe2ches avec la programmation asynchrone",u={unversionedId:"OpenClassrooms/Construisez_un_site_e-commerce/Ecrivez_du_JavaScript_pour_le_web/3-Parallelisez_vos_longues_taches_avec_la_programmation_asynchrone",id:"OpenClassrooms/Construisez_un_site_e-commerce/Ecrivez_du_JavaScript_pour_le_web/3-Parallelisez_vos_longues_taches_avec_la_programmation_asynchrone",title:"Parall\xe9lisez vos longues t\xe2ches avec la programmation asynchrone",description:"Comprenez comment fonctionne l'asynchrone en JS",source:"@site/docs/OpenClassrooms/5-Construisez_un_site_e-commerce/3-Ecrivez_du_JavaScript_pour_le_web/3-Parallelisez_vos_longues_taches_avec_la_programmation_asynchrone.mdx",sourceDirName:"OpenClassrooms/5-Construisez_un_site_e-commerce/3-Ecrivez_du_JavaScript_pour_le_web",slug:"/OpenClassrooms/Construisez_un_site_e-commerce/Ecrivez_du_JavaScript_pour_le_web/3-Parallelisez_vos_longues_taches_avec_la_programmation_asynchrone",permalink:"/Mon_Web_Dev_Wiki/docs/OpenClassrooms/Construisez_un_site_e-commerce/Ecrivez_du_JavaScript_pour_le_web/3-Parallelisez_vos_longues_taches_avec_la_programmation_asynchrone",editUrl:"https://github.com/gylgyl2000/Mon_Web_Dev_Wiki/edit/master/website/docs/OpenClassrooms/5-Construisez_un_site_e-commerce/3-Ecrivez_du_JavaScript_pour_le_web/3-Parallelisez_vos_longues_taches_avec_la_programmation_asynchrone.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"3-Parallelisez_vos_longues_taches_avec_la_programmation_asynchrone",title:"Parall\xe9lisez vos longues t\xe2ches avec la programmation asynchrone"},sidebar:"openClassroomsSidebar",previous:{title:"Communiquez via une API avec un service web",permalink:"/Mon_Web_Dev_Wiki/docs/OpenClassrooms/Construisez_un_site_e-commerce/Ecrivez_du_JavaScript_pour_le_web/2-Communiquez_via_une_API_avec_un_service_web"},next:{title:"Mettez en place les bons outils pour travailler",permalink:"/Mon_Web_Dev_Wiki/docs/OpenClassrooms/Construisez_un_site_e-commerce/Ecrivez_du_JavaScript_pour_le_web/4-Mettez_en_place_les_bons_outils_pour_travailler"}},d=[{value:"Comprenez comment fonctionne l&#39;asynchrone en JS",id:"comprenez-comment-fonctionne-lasynchrone-en-js",children:[{value:"JavaScript est synchrone et mono-thread",id:"javascript-est-synchrone-et-mono-thread",children:[],level:3},{value:"L&#39;event loop",id:"levent-loop",children:[],level:3},{value:"Jouez avec l&#39;event loop",id:"jouez-avec-levent-loop",children:[{value:"La fonction setTimeout",id:"la-fonction-settimeout",children:[],level:4},{value:"Les autres m\xe9thodes",id:"les-autres-m\xe9thodes",children:[],level:4}],level:3},{value:"Le cas de l&#39;I/O",id:"le-cas-de-lio",children:[],level:3},{value:"En r\xe9sum\xe9",id:"en-r\xe9sum\xe9",children:[],level:3}],level:2},{value:"G\xe9rez du code asynchrone",id:"g\xe9rez-du-code-asynchrone",children:[{value:"Callbacks",id:"callbacks",children:[{value:"G\xe9rez\xa0des erreurs callbacks",id:"g\xe9rezdes-erreurs-callbacks",children:[],level:4}],level:3},{value:"Promise",id:"promise",children:[{value:"G\xe9rez des\xa0erreurs Promise",id:"g\xe9rez-deserreurs-promise",children:[],level:4}],level:3},{value:"Async/await",id:"asyncawait",children:[{value:"G\xe9rez des\xa0erreurs async/await",id:"g\xe9rez-deserreurs-asyncawait",children:[],level:4}],level:3},{value:"\xc0 vous de jouer\xa0!",id:"\xe0-vous-de-jouer",children:[],level:3},{value:"En r\xe9sum\xe9",id:"en-r\xe9sum\xe9-1",children:[],level:3}],level:2},{value:"Parall\xe9lisez plusieurs requ\xeates HTTP",id:"parall\xe9lisez-plusieurs-requ\xeates-http",children:[{value:"Encha\xeenez des requ\xeates avec les callbacks",id:"encha\xeenez-des-requ\xeates-avec-les-callbacks",children:[],level:3},{value:"Encha\xeenez des requ\xeates avec les Promise",id:"encha\xeenez-des-requ\xeates-avec-les-promise",children:[],level:3},{value:"Encha\xeenez des requ\xeates avec async/await",id:"encha\xeenez-des-requ\xeates-avec-asyncawait",children:[],level:3},{value:"En r\xe9sum\xe9",id:"en-r\xe9sum\xe9-2",children:[],level:3}],level:2},{value:"Quiz : Parall\xe9lisez vos longues t\xe2ches avec la programmation asynchrone",id:"quiz--parall\xe9lisez-vos-longues-t\xe2ches-avec-la-programmation-asynchrone",children:[{value:"Comp\xe9tences \xe9valu\xe9es",id:"comp\xe9tences-\xe9valu\xe9es",children:[],level:4},{value:"Question 1 : Que peut-on dire du langage JavaScript ?",id:"question-1--que-peut-on-dire-du-langage-javascript-",children:[],level:4},{value:"Question 2 : Qu&#39;est-ce que l&#39;event loop ?",id:"question-2--quest-ce-que-levent-loop-",children:[],level:4},{value:"Question 3 : Qu\u2019affiche cet extrait ?",id:"question-3--quaffiche-cet-extrait-",children:[],level:4},{value:"Question 4 : Qu&#39;est-ce qu&#39;une\xa0callback ?",id:"question-4--quest-ce-quunecallback-",children:[],level:4},{value:"Question 5 : Qu&#39;est-ce qu&#39;une <code>Promise</code>\xa0?",id:"question-5--quest-ce-quune-promise",children:[],level:4},{value:"Question 6 : Qu\u2019affiche ce code ?",id:"question-6--quaffiche-ce-code-",children:[],level:4},{value:"Question 7 : Sachant que promise1 sera r\xe9solue avec la valeur &quot;Salut&quot;, et que promise2 sera r\xe9solue avec &quot;toi&quot;, qu\u2019affiche cet extrait\xa0?",id:"question-7--sachant-que-promise1-sera-r\xe9solue-avec-la-valeur-salut-et-que-promise2-sera-r\xe9solue-avec-toi-quaffiche-cet-extrait",children:[],level:4},{value:"Question 8 : Que fait cet extrait ?",id:"question-8--que-fait-cet-extrait-",children:[],level:4},{value:"Question 9 : Que fait ce code et que contient la variable <code>promiseRes</code> ?",id:"question-9--que-fait-ce-code-et-que-contient-la-variable-promiseres-",children:[],level:4}],level:2}],c={toc:d};function p(e){var n=e.components,a=(0,r.Z)(e,s);return(0,l.mdx)("wrapper",(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,l.mdx)("h1",{id:"parall\xe9lisez-vos-longues-t\xe2ches-avec-la-programmation-asynchrone"},"Parall\xe9lisez vos longues t\xe2ches avec la programmation asynchrone"),(0,l.mdx)("h2",{id:"comprenez-comment-fonctionne-lasynchrone-en-js"},"Comprenez comment fonctionne l'asynchrone en JS"),(0,l.mdx)("p",null,(0,l.mdx)("a",{parentName:"p",href:"https://openclassrooms.com/fr/courses/5543061-ecrivez-du-javascript-pour-le-web/5577651-comprenez-comment-fonctionne-lasynchrone-en-js"},"Comprenez comment fonctionne l'asynchrone en JS - \xc9crivez du JavaScript pour le web - OpenClassrooms")),(0,l.mdx)(i.fG,{vimeoId:"539128094",mdxType:"Vimeo"}),(0,l.mdx)("br",null),(0,l.mdx)("p",null,"Saviez-vous que JavaScript est synchrone et n'a qu'un seul ",(0,l.mdx)("em",{parentName:"p"},"thread")," d'ex\xe9cution ?"),(0,l.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,l.mdx)("h5",{parentName:"div"},(0,l.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,l.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"?")),(0,l.mdx)("div",{parentName:"div",className:"admonition-content"},(0,l.mdx)("p",{parentName:"div"},"... qu'est-ce que tu nous racontes l\xe0 ?"))),(0,l.mdx)("h3",{id:"javascript-est-synchrone-et-mono-thread"},"JavaScript est synchrone et mono-thread"),(0,l.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,l.mdx)("h5",{parentName:"div"},(0,l.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,l.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"?")),(0,l.mdx)("div",{parentName:"div",className:"admonition-content"},(0,l.mdx)("p",{parentName:"div"},"Qu'est-ce que \xe7a veut dire ?"))),(0,l.mdx)("p",null,"Eh bien, tout simplement qu'il n'y a qu'",(0,l.mdx)("strong",{parentName:"p"},"un seul fil d'ex\xe9cution")," du code source. Cela signifie que lorsque vous \xe9crivez du code, chaque\nligne sera ex\xe9cut\xe9e ",(0,l.mdx)("strong",{parentName:"p"},"l'une apr\xe8s l'autre")," en attendant la fin de l'ex\xe9cution de la ligne pr\xe9c\xe9dente. Il n'y a pas d'autre code qui pourra\n\xeatre ex\xe9cut\xe9 en parall\xe8le. Il ne peut faire qu'une seule chose \xe0 la fois."),(0,l.mdx)("p",null,"Mais dans le titre du chapitre tu parles de faire de l'asynchrone en JavaScript, et l\xe0 tu nous dis que ce n'est plus possible ?"),(0,l.mdx)("p",null,"Eh bien, en fait il est possible et m\xeame tr\xe8s facile de faire de l'asynchrone en JavaScript, mais l'ex\xe9cution restera synchrone..."),(0,l.mdx)("p",null,"\ud83e\uddd0"),(0,l.mdx)("p",null,"Bon, essayons de clarifier tout \xe7a maintenant..."),(0,l.mdx)("p",null,"Si du code ",(0,l.mdx)("strong",{parentName:"p"},"synchrone")," est du code qui s'ex\xe9cute ligne apr\xe8s ligne en attendant la ",(0,l.mdx)("strong",{parentName:"p"},"fin de l'ex\xe9cution")," de la ligne pr\xe9c\xe9dente, alors on\npeut facilement en d\xe9duire que du code ",(0,l.mdx)("strong",{parentName:"p"},"asynchrone")," va s'ex\xe9cuter ligne apr\xe8s ligne, mais\xa0la ligne suivante\xa0",(0,l.mdx)("strong",{parentName:"p"},"n'attendra pas")," que la ligne\nasynchrone ait fini son ex\xe9cution. Prenons cet exemple :"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"let productId = 1;\nlet productPrice = getProductPriceAsync(productId);\ndoSomething(productPrice);\n")),(0,l.mdx)("p",null,"En admettant que la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"getProductPriceAsync()"),"\xa0soit asynchrone, alors la ligne suivante sera ex\xe9cut\xe9e avant la fin de l'ex\xe9cution de la\nfonction asynchrone, mais il ne sera pas encore possible d'utiliser la valeur de ",(0,l.mdx)("inlineCode",{parentName:"p"},"productPrice"),"\xa0(nous verrons\xa0dans le chapitre suivant\xa0comment\nnous pouvons nous en servir)."),(0,l.mdx)("p",null,"Mais comment peut-on faire \xe7a avec un langage synchrone ?"),(0,l.mdx)("p",null,"Avec ce qu'on appelle l'",(0,l.mdx)("em",{parentName:"p"},"event loop")," !"),(0,l.mdx)("h3",{id:"levent-loop"},"L'event loop"),(0,l.mdx)("p",null,"En JavaScript, chaque ligne de code est ex\xe9cut\xe9e de fa\xe7on synchrone, mais il est possible de demander \xe0 ex\xe9cuter du code de mani\xe8re asynchrone.\nEt lorsque l'on demande \xe0 ex\xe9cuter une fonction de fa\xe7on asynchrone, la fonction en question est plac\xe9e dans une sorte de ",(0,l.mdx)("strong",{parentName:"p"},"file d'attente"),"\nqui va ex\xe9cuter toutes les fonctions qu'elle contient les unes apr\xe8s les autres. C'est ce qu'on appelle l'",(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("strong",{parentName:"em"},"event loop"),"."),"\xa0Tout le c\u0153ur du\nlangage fonctionne autour de \xe7a."),(0,l.mdx)("div",{className:"admonition admonition-info alert alert--info"},(0,l.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,l.mdx)("h5",{parentName:"div"},(0,l.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,l.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.mdx)("div",{parentName:"div",className:"admonition-content"},(0,l.mdx)("p",{parentName:"div"},"Ainsi, le code n'est pas r\xe9ellement ex\xe9cut\xe9 en parall\xe8le car il est mis en file d'attente, mais il ne bloque pas l'ex\xe9cution du code depuis\nlequel il a \xe9t\xe9 appel\xe9."))),(0,l.mdx)("h3",{id:"jouez-avec-levent-loop"},"Jouez avec l'event loop"),(0,l.mdx)("p",null,"Maintenant que vous comprenez un peu mieux ce qu'est l'event loop, voyons concr\xe8tement comment demander \xe0 ex\xe9cuter du code de mani\xe8re asynchrone."),(0,l.mdx)("h4",{id:"la-fonction-settimeout"},"La fonction setTimeout"),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"setTimeout"),"\xa0est\xa0la fonction ",(0,l.mdx)("strong",{parentName:"p"},"la plus r\xe9pandue")," lorsque l'on veut ex\xe9cuter du code asynchrone sans bloquer le fil d'ex\xe9cution en cours. Cette\nfonction prend 2 param\xe8tres :"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"La ",(0,l.mdx)("strong",{parentName:"li"},"fonction \xe0 ex\xe9cuter")," de mani\xe8re asynchrone (qui sera donc ajout\xe9e \xe0 la file d'attente de l'event loop) ;"),(0,l.mdx)("li",{parentName:"ul"},"Le ",(0,l.mdx)("strong",{parentName:"li"},"d\xe9lai"),", en millisecondes, avant d'ex\xe9cuter cette fonction.")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},'setTimeout(function() {\n    console.log("I\'m here!")\n}, 5000);\nconsole.log("Where are you?");\n')),(0,l.mdx)("p",null,"Dans l'exemple ci-dessus, le texte ",(0,l.mdx)("inlineCode",{parentName:"p"},"Where are you?"),"\xa0s'affichera avant ",(0,l.mdx)("inlineCode",{parentName:"p"},"I'm here!"),", qui ne sera affich\xe9 qu'au bout de 5 secondes."),(0,l.mdx)("p",null,"La fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"setTimeout"),"\xa0nous retourne une valeur permettant d'identifier le code asynchrone que l'on veut ex\xe9cuter. Il est possible de passer\ncet identifiant en param\xe8tre \xe0 la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"clearTimeout"),", si vous souhaitez annuler l'ex\xe9cution asynchrone de la fonction avant qu'elle ne\nsoit ex\xe9cut\xe9e."),(0,l.mdx)("div",{className:"admonition admonition-info alert alert--info"},(0,l.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,l.mdx)("h5",{parentName:"div"},(0,l.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,l.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.mdx)("div",{parentName:"div",className:"admonition-content"},(0,l.mdx)("p",{parentName:"div"},"Pour en savoir plus sur la fonction setTimeout, vous trouverez la documentation ",(0,l.mdx)("a",{parentName:"p",href:"https://www.w3schools.com/jsref/met_win_settimeout.asp"},"ici, sur le site de W3school"),"."))),(0,l.mdx)("h4",{id:"les-autres-m\xe9thodes"},"Les autres m\xe9thodes"),(0,l.mdx)("p",null,"Il existe d'autres m\xe9thodes un peu moins r\xe9pandues, voire tr\xe8s peu utilis\xe9es :"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"setInterval"),"\xa0(",(0,l.mdx)("a",{parentName:"li",href:"https://www.w3schools.com/jsref/met_win_setinterval.asp"},"documentation \xe0 retrouver ici"),") : elle fonctionne exactement comme\n",(0,l.mdx)("inlineCode",{parentName:"li"},"setTimeout"),", \xe0 ceci pr\xe8s qu'elle ex\xe9cute la fonction pass\xe9e en param\xe8tre ",(0,l.mdx)("strong",{parentName:"li"},"en boucle")," \xe0 une ",(0,l.mdx)("strong",{parentName:"li"},"fr\xe9quence d\xe9termin\xe9e")," par le temps en\nmillisecondes pass\xe9 en second param\xe8tre. Il suffira de passer la valeur de retour de ",(0,l.mdx)("inlineCode",{parentName:"li"},"setInterval"),"\xa0\xe0 ",(0,l.mdx)("inlineCode",{parentName:"li"},"clearInterval"),"\xa0pour ",(0,l.mdx)("strong",{parentName:"li"},"stopper"),"\nl'ex\xe9cution en boucle de la fonction ;"),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},"setImmediate"),"\xa0(",(0,l.mdx)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/setImmediate"},"documentation \xe0 retrouver ici"),"). Cette fonction prend\nen seul param\xe8tre la fonction \xe0 ex\xe9cuter de fa\xe7on synchrone. \xa0La fonction en question sera plac\xe9e dans la ",(0,l.mdx)("strong",{parentName:"li"},"file d'attente")," de l'event loop,\nmais va ",(0,l.mdx)("strong",{parentName:"li"},"passer devant")," toutes les autres fonctions, sauf certaines sp\xe9cifiques au Javascript : les \xe9v\xe9nements (les m\xeames qu'on a vus au\npremier chapitre, et qui sont donc ex\xe9cut\xe9s de fa\xe7on asynchrone\xa0\ud83d\ude09), le rendu, et l'I/O. Il existe aussi ",(0,l.mdx)("inlineCode",{parentName:"li"},"nextTick"),", qui permet, l\xe0, de\ncourt-circuiter tout le monde. \xc0 utiliser avec pr\xe9caution, donc...")),(0,l.mdx)("h3",{id:"le-cas-de-lio"},"Le cas de l'I/O"),(0,l.mdx)("p",null,"L'I/O correspond aux \xe9v\xe9nements li\xe9s \xe0 l'",(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("strong",{parentName:"em"},"input")),"(les flux d'entr\xe9e) et l'",(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("strong",{parentName:"em"},"output")),"(les flux de sortie). Cela correspond notamment \xe0 la\nlecture/\xe9criture des fichiers, aux requ\xeates HTTP, etc."),(0,l.mdx)("p",null,"Vous avez d\xfb remarquer que lorsque l'on ex\xe9cutait la fonction\xa0",(0,l.mdx)("inlineCode",{parentName:"p"},"fetch()")," lors d'une requ\xeate HTTP, celle-ci ne bloquait pas l'ex\xe9cution du code.\nOn n'attend pas que la requ\xeate soit envoy\xe9e et une r\xe9ponse re\xe7ue avant d'ex\xe9cuter le reste du code. C'est donc une ",(0,l.mdx)("strong",{parentName:"p"},"fonction asynchrone"),"."),(0,l.mdx)("p",null,"D\u2019ailleurs, ",(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("inlineCode",{parentName:"em"},"fetch()"))," retourne une ",(0,l.mdx)("em",{parentName:"p"},"Promise")," qui est une autre fa\xe7on de faire de l\u2019asynchrone car les fonctions ",(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("inlineCode",{parentName:"em"},"then()"))," et ",(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("inlineCode",{parentName:"em"},"catch()"))," sont\nappel\xe9es plus tard lorsque le travail (dans ce qu\u2019on a vu dans le chapitre pr\xe9c\xe9dent il s\u2019agissait d\u2019une requ\xeate HTTP) est termin\xe9. Et de la\nm\xeame mani\xe8re, tout ce qui touche \xe0 l'I/O peut \xeatre ex\xe9cut\xe9 de mani\xe8re asynchrone. Et c'est tant mieux, car leur ex\xe9cution peut prendre du temps. \ud83d\ude0e"),(0,l.mdx)("h3",{id:"en-r\xe9sum\xe9"},"En r\xe9sum\xe9"),(0,l.mdx)("p",null,"Dans ce chapitre, vous avez appris :"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"Que le JavaScript est synchrone et mono-thread ;"),(0,l.mdx)("li",{parentName:"ul"},"Que l\u2019event loop est le moteur de JavaScript qui ex\xe9cute les fonctions JavaScript asynchrones sous forme d\u2019\xe9v\xe9nements ;"),(0,l.mdx)("li",{parentName:"ul"},"Comment utiliser la m\xe9thode\xa0 setTimeout ;"),(0,l.mdx)("li",{parentName:"ul"},"Qu'il existe d'autres m\xe9thodes asynchrones : ",(0,l.mdx)("em",{parentName:"li"},"setInterval"),", ",(0,l.mdx)("em",{parentName:"li"},"setImmediate")," ;"),(0,l.mdx)("li",{parentName:"ul"},"Que l'I/O est g\xe9r\xe9 de mani\xe8re asynchrone avec JavaScript.")),(0,l.mdx)("p",null,"Vous savez maintenant comment ex\xe9cuter du code de mani\xe8re asynchrone, mais on ne sait pas comment profiter du r\xe9sultat de ce code depuis celui\nqui l'a ex\xe9cut\xe9."),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},"Vous vous rappelez de notre exemple de code avec la fonction ",(0,l.mdx)("inlineCode",{parentName:"em"},"getProductPriceAsync")," ? Eh bien, avec ce que nous venons d'apprendre nous ne\nsommes pas en mesure de renvoyer le r\xe9sultat de notre code dans la variable ",(0,l.mdx)("inlineCode",{parentName:"em"},"productPrice"),". Et c'est justement dans le prochain chapitre que\nnous allons voir \xe7a !")),(0,l.mdx)("hr",null),(0,l.mdx)("h2",{id:"g\xe9rez-du-code-asynchrone"},"G\xe9rez du code asynchrone"),(0,l.mdx)("p",null,(0,l.mdx)("a",{parentName:"p",href:"https://openclassrooms.com/fr/courses/5543061-ecrivez-du-javascript-pour-le-web/5577676-gerez-du-code-asynchrone"},"G\xe9rez du code asynchrone - \xc9crivez du JavaScript pour le web - OpenClassrooms")),(0,l.mdx)(i.fG,{vimeoId:"539128130",mdxType:"Vimeo"}),(0,l.mdx)("br",null),(0,l.mdx)("p",null,"Nous allons maintenant voir comment on peut ex\xe9cuter du code asynchrone et renvoyer le r\xe9sultat que l'on souhaite \xe0 celui qui a lanc\xe9 le code."),(0,l.mdx)("h3",{id:"callbacks"},"Callbacks"),(0,l.mdx)("p",null,'C\'est la m\xe9thode la plus "vieille" mais toujours utilis\xe9e par beaucoup de modules JavaScript (nous verrons ce que sont les modules dans la\nderni\xe8re partie de ce cours). Une ',(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("strong",{parentName:"em"},"callback"))," est simplement une fonction que vous d\xe9finissez. Le principe de la\xa0callback\xa0est de la\n",(0,l.mdx)("strong",{parentName:"p"},"passer en param\xe8tre")," d'une fonction asynchrone. Une fois que la fonction asynchrone a fini sa t\xe2che, elle va appeler notre fonction\n",(0,l.mdx)("em",{parentName:"p"},"callback")," en lui passant un ",(0,l.mdx)("strong",{parentName:"p"},"r\xe9sultat"),". Ainsi, le code que nous mettons dans notre fonction\xa0",(0,l.mdx)("em",{parentName:"p"},"callback")," sera ex\xe9cut\xe9 de mani\xe8re asynchrone.\nCela ne vous rappelle pas quelque chose ? Les ",(0,l.mdx)("strong",{parentName:"p"},"\xe9v\xe9nements")," ! Les \xe9v\xe9nements sont un exemple typique de fonction asynchrone \xe0 laquelle on\npasse une fonction\xa0",(0,l.mdx)("em",{parentName:"p"},"callback"),"."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"element.addEventListener('click', function(e) {\n    // Do something here ...\n});\n")),(0,l.mdx)("p",null,"Dans l'exemple ci-dessus, la fonction qui est envoy\xe9e \xe0 ",(0,l.mdx)("inlineCode",{parentName:"p"},"addEventListener"),"\xa0est une callback. Elle n'est pas appel\xe9e tout de suite, elle est\nappel\xe9e plus tard, d\xe8s que l'utilisateur clique sur l'\xe9l\xe9ment. \xc7a ne bloque donc pas l'ex\xe9cution du code et c'est donc asynchrone. \ud83d\ude01"),(0,l.mdx)("p",null,"Les\xa0callbacks sont la ",(0,l.mdx)("strong",{parentName:"p"},"base de l'asynchrone")," en JavaScript et sont tr\xe8s utilis\xe9es."),(0,l.mdx)("blockquote",null,(0,l.mdx)("p",{parentName:"blockquote"},"Par exemple, la fonction que nous passons en param\xe8tre \xe0\xa0",(0,l.mdx)("inlineCode",{parentName:"p"},"setTimeout"),"\xa0est une callback.")),(0,l.mdx)("p",null,"Les\xa0callbacks sont faciles \xe0 comprendre et \xe0 utiliser, mais elles souffrent d'un gros probl\xe8me de lisibilit\xe9 du code, via ce qu'on appelle le\n",(0,l.mdx)("em",{parentName:"p"},"callback hell"),". En effet, on se retrouve r\xe9guli\xe8rement dans des situations o\xf9 on va imbriquer plusieurs couches de\xa0callbacks, rendant le code\ndifficile \xe0 lire et pouvant g\xe9n\xe9rer des erreurs."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"elt.addEventListener('click', function(e) {\n    mysql.connect(function(err) {\n        mysql.query(sql, function(err, result) {\n            fs.readFile(filePath, function(err, data) {\n                mysql.query(sql, function(err, result) {\n                    // etc.\n                });\n            });\n        });\n    });\n});\n")),(0,l.mdx)("p",null,"Ce code, qui n'est pas facile \xe0 lire, pourrait pourtant correspondre \xe0 un cas d'utilisation concret des callbacks : d\xe8s que l'utilisateur\nclique sur un \xe9l\xe9ment, on ouvre une connexion\xa0",(0,l.mdx)("em",{parentName:"p"},"MySQL"),", puis on r\xe9cup\xe8re des donn\xe9es depuis la base de donn\xe9es, on lit un contenu dans un\nfichier et on fait une nouvelle requ\xeate\xa0",(0,l.mdx)("em",{parentName:"p"},"MySQL"),", etc."),(0,l.mdx)("p",null,"C'est bien beau de g\xe9rer du code asynchrone, mais rien ne vous garantit que tout se soit bien pass\xe9. Il nous faut donc un m\xe9canisme pour savoir\nsi une erreur est survenue !"),(0,l.mdx)("h4",{id:"g\xe9rezdes-erreurs-callbacks"},"G\xe9rez\xa0des erreurs callbacks"),(0,l.mdx)("p",null,"Pour g\xe9rer les erreurs avec les\xa0callbacks, la m\xe9thode la plus utilis\xe9e est de prendre\xa0",(0,l.mdx)("strong",{parentName:"p"},"2\xa0param\xe8tres")," dans notre\xa0callback. Le 2e param\xe8tre\nest notre donn\xe9e et le 1er est l'erreur. Si elle n'est pas\xa0",(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("strong",{parentName:"em"},"null"))," ou\xa0",(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("strong",{parentName:"em"},"undefined")),",\xa0 elle\xa0contiendra un message d'erreur indiquant qu'une\nerreur est intervenue."),(0,l.mdx)("p",null,"Si on reprend l'exemple ci-dessus, on voit par exemple que la lecture d'un fichier avec le module ",(0,l.mdx)("inlineCode",{parentName:"p"},"fs"),"\xa0peut nous retourner une erreur :"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"fs.readFile(filePath, function(err, data) {\n    if (err) {\n        throw err;\n    }\n    // Do something with data\n});\n")),(0,l.mdx)("h3",{id:"promise"},"Promise"),(0,l.mdx)("p",null,"Les\xa0",(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("strong",{parentName:"em"},"promise")),", ou ",(0,l.mdx)("em",{parentName:"p"},"promesses")," en fran\xe7ais, sont un peu plus complexes mais bien plus puissantes et faciles \xe0 lire que les\xa0callbacks."),(0,l.mdx)("p",null,"Lorsque l'on ex\xe9cute du code asynchrone, celui-ci va imm\xe9diatement nous retourner une \"promesse\" qu'un r\xe9sultat nous sera envoy\xe9 prochainement."),(0,l.mdx)("p",null,"Cette promesse est en fait un objet\xa0",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"\xa0qui peut \xeatre ",(0,l.mdx)("inlineCode",{parentName:"p"},"resolve"),"\xa0avec un r\xe9sultat, ou ",(0,l.mdx)("inlineCode",{parentName:"p"},"reject"),"\xa0avec une erreur."),(0,l.mdx)("p",null,"Lorsque l'on r\xe9cup\xe8re une ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),", on peut utiliser sa fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"then()"),"\xa0pour ex\xe9cuter du code d\xe8s que la promesse est r\xe9solue, et sa fonction\n",(0,l.mdx)("inlineCode",{parentName:"p"},"catch()"),"\xa0pour ex\xe9cuter du code d\xe8s qu'une erreur est survenue."),(0,l.mdx)("p",null,"Voyons avec un exemple concret pour mieux comprendre :"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"functionThatReturnsAPromise()\n    .then(function(data) {\n        // Do something with data\n    })\n    .catch(function(err) {\n        // Do something with error\n    });\n")),(0,l.mdx)("p",null,"Dans l'exemple ci-dessus, la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"functionThatReturnsAPromise"),"\xa0nous renvoie une ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),". On peut donc utiliser sa fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"then()")," en\nlui passant une fonction qui sera ex\xe9cut\xe9e d\xe8s qu'un r\xe9sultat sera re\xe7u (avec le r\xe9sultat en question pass\xe9 \xe0 notre fonction). On peut aussi\nutiliser sa fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"catch()"),"\xa0en lui passant une fonction qui sera ex\xe9cut\xe9e si une erreur est survenue (avec l'erreur en question pass\xe9e \xe0\nnotre fonction)."),(0,l.mdx)("p",null,"Le gros avantage est que l'on peut aussi ",(0,l.mdx)("strong",{parentName:"p"},"cha\xeener")," les ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),". Ainsi, la valeur que l'on retourne dans la fonction que l'on passe \xe0\n",(0,l.mdx)("inlineCode",{parentName:"p"},"then()"),"\xa0est transform\xe9e en une nouvelle ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"\xa0r\xe9solue, que l'on peut utiliser avec une nouvelle fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"then()"),". Si notre fonction\nretourne par contre une exception, alors une nouvelle ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"\xa0rejet\xe9e est cr\xe9\xe9e et on peut l'intercepter avec la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"catch()"),". Mais si\nla fonction que l'on a pass\xe9e \xe0 ",(0,l.mdx)("inlineCode",{parentName:"p"},"catch()"),"\xa0retourne une nouvelle valeur, alors on a \xe0 nouveau une ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"\xa0r\xe9solue que l'on peut utiliser avec\nune fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"then()"),", etc."),(0,l.mdx)("p",null,"Voici un exemple qui vous montre comment on peut profiter des ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"\xa0pour cha\xeener notre code asynchrone :"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"returnAPromiseWithNumber2()\n    .then(function(data) { // Data is 2\n        return data + 1;\n    })\n    .then(function(data) { // Data is 3\n        throw new Error('error');\n    })\n    .then(function(data) {\n        // Not executed\n    })\n    .catch(function(err) {\n        return 5;\n    })\n    .then(function(data) { // Data is 5\n        // Do something\n    });\n")),(0,l.mdx)("p",null,"Dans l'exemple ci-dessus, la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"returnAPromiseWithNumber2"),"\xa0nous renvoie une ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise")," qui va \xeatre r\xe9solue avec le nombre ",(0,l.mdx)("inlineCode",{parentName:"p"},"2"),"."),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"La premi\xe8re fonction ",(0,l.mdx)("inlineCode",{parentName:"li"},"then()"),"\xa0va r\xe9cup\xe9rer cette valeur."),(0,l.mdx)("li",{parentName:"ul"},"Puis, dans cette fonction on retourne ",(0,l.mdx)("inlineCode",{parentName:"li"},"2 + 1"),", ce qui cr\xe9e une nouvelle ",(0,l.mdx)("inlineCode",{parentName:"li"},"Promise"),"\xa0qui est imm\xe9diatement r\xe9solue avec ",(0,l.mdx)("inlineCode",{parentName:"li"},"3"),"."),(0,l.mdx)("li",{parentName:"ul"},"Puis, dans le ",(0,l.mdx)("inlineCode",{parentName:"li"},"then()"),"\xa0suivant, nous retournons une erreur.")),(0,l.mdx)("p",null,"De ce fait, le\xa0",(0,l.mdx)("inlineCode",{parentName:"p"},"then()")," qui suit ne sera pas appel\xe9 et c'est le\xa0",(0,l.mdx)("inlineCode",{parentName:"p"},"catch()")," suivant qui va \xeatre appel\xe9 avec l'erreur en question. Lui-m\xeame\nretourne une nouvelle valeur qui est transform\xe9e en Promise\xa0qui est imm\xe9diatement r\xe9solue avec la valeur\xa0",(0,l.mdx)("inlineCode",{parentName:"p"},"5"),". Le dernier\xa0",(0,l.mdx)("inlineCode",{parentName:"p"},"then()"),"\xa0va \xeatre\nex\xe9cut\xe9 avec cette valeur."),(0,l.mdx)("div",{className:"admonition admonition-info alert alert--info"},(0,l.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,l.mdx)("h5",{parentName:"div"},(0,l.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,l.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.mdx)("div",{parentName:"div",className:"admonition-content"},(0,l.mdx)("p",{parentName:"div"},"L\u2019API ",(0,l.mdx)("inlineCode",{parentName:"p"},"Fetch"),"\xa0utilise les ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"\xa0pour g\xe9rer les r\xe9ponses aux requ\xeates HTTP, comme nous l\u2019avons vu dans la partie pr\xe9c\xe9dente."))),(0,l.mdx)("h4",{id:"g\xe9rez-deserreurs-promise"},"G\xe9rez des\xa0erreurs Promise"),(0,l.mdx)("p",null,"Nous avons d\xe9j\xe0 vu comment se g\xe8rent les erreurs avec les ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),". Une erreur correspond \xe0 une ",(0,l.mdx)("strong",{parentName:"p"},"exception")," qui a \xe9t\xe9 lanc\xe9e, et il est\npossible de l'intercepter en appelant la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"catch()"),"\xa0de la ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"."),(0,l.mdx)("h3",{id:"asyncawait"},"Async/await"),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"async"),"\xa0et ",(0,l.mdx)("inlineCode",{parentName:"p"},"await"),"\xa0sont 2 nouveaux mots cl\xe9s qui permettent de g\xe9rer le code asynchrone de mani\xe8re beaucoup plus intuitive, en bloquant\nl'ex\xe9cution d'un code asynchrone jusqu'\xe0 ce qu'il retourne un r\xe9sultat."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"async function fonctionAsynchrone1() {/* code asynchrone */}\nasync function fonctionAsynchrone2() {/* code asynchrone */}\n\nasync function fonctionAsynchrone3() {\n    const value1 = await fonctionAsynchrone1();\n    const value2 = await fonctionAsynchrone2();\n    return value1 + value2;\n}\n")),(0,l.mdx)("p",null,"Dans cet exemple, nous avons un total de 3 fonction asynchrones : ",(0,l.mdx)("inlineCode",{parentName:"p"},"fonctionAsynchrone1"),", ",(0,l.mdx)("inlineCode",{parentName:"p"},"fonctionAsynchrone2"),", ",(0,l.mdx)("inlineCode",{parentName:"p"},"fonctionAsynchrone3"),". Quand\non utilise ",(0,l.mdx)("inlineCode",{parentName:"p"},"async"),"\xa0et ",(0,l.mdx)("inlineCode",{parentName:"p"},"await"),", une fonction asynchrone doit avoir le mot cl\xe9 ",(0,l.mdx)("inlineCode",{parentName:"p"},"async"),"\xa0avant la fonction. Ensuite, dans le code, nous pouvons\nfaire appel \xe0 des fonctions asynchrones et attendre leur r\xe9sultat gr\xe2ce au mot cl\xe9 ",(0,l.mdx)("inlineCode",{parentName:"p"},"await"),"\xa0que l'on met devant l'appel de la fonction."),(0,l.mdx)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,l.mdx)("h5",{parentName:"div"},(0,l.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,l.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"!")),(0,l.mdx)("div",{parentName:"div",className:"admonition-content"},(0,l.mdx)("p",{parentName:"div"},(0,l.mdx)("inlineCode",{parentName:"p"},"async"),"\xa0/ ",(0,l.mdx)("inlineCode",{parentName:"p"},"await"),"\xa0utilisent les Promise en arri\xe8re-plan, il est donc possible d'utiliser les 2 en m\xeame temps."))),(0,l.mdx)("h4",{id:"g\xe9rez-deserreurs-asyncawait"},"G\xe9rez des\xa0erreurs async/await"),(0,l.mdx)("p",null,(0,l.mdx)("inlineCode",{parentName:"p"},"async")," / ",(0,l.mdx)("inlineCode",{parentName:"p"},"await")," utilisant les Promise, la lev\xe9e d'une erreur se fait aussi par une ",(0,l.mdx)("strong",{parentName:"p"},"exception"),"."),(0,l.mdx)("p",null,"Pour intercepter cette erreur, par contre, il suffit d'ex\xe9cuter notre code asynchrone dans un bloc\xa0",(0,l.mdx)("inlineCode",{parentName:"p"},"try {} catch (e) {}"),", l'erreur \xe9tant\nenvoy\xe9e dans le\xa0",(0,l.mdx)("inlineCode",{parentName:"p"},"catch"),"."),(0,l.mdx)("h3",{id:"\xe0-vous-de-jouer"},"\xc0 vous de jouer\xa0!"),(0,l.mdx)("p",null,(0,l.mdx)("img",{parentName:"p",src:"https://user.oc-static.com/upload/2021/04/20/16189267631776_A-vous-de-jouer%20%282%29.png",alt:"16189267631776_A-vous-de-jouer%20%282%29.png"})),(0,l.mdx)("p",null,"Rendez-vous sur ",(0,l.mdx)("a",{parentName:"p",href:"https://codepen.io/nicolaspatschkowski/pen/NWqyaKP"},"cet \xe9diteur CodePen")," pour r\xe9aliser l'exercice suivant."),(0,l.mdx)("p",null,"Dans cet exercice j'ai cr\xe9\xe9 2 fonctions asynchrones (avec le mot cl\xe9\xa0",(0,l.mdx)("inlineCode",{parentName:"p"},"async"),")\xa0",(0,l.mdx)("inlineCode",{parentName:"p"},"getNumber1()"),"\xa0et\xa0",(0,l.mdx)("inlineCode",{parentName:"p"},"getNumber2()"),"."),(0,l.mdx)("ol",null,(0,l.mdx)("li",{parentName:"ol"},"Dans un premier temps nous allons cr\xe9er une fonction asynchrone (avec\xa0",(0,l.mdx)("inlineCode",{parentName:"li"},"async"),") qui s'appelle\xa0",(0,l.mdx)("inlineCode",{parentName:"li"},"compute"),"\xa0et qui va r\xe9cup\xe9rer les r\xe9sultats des\n2 fonctions asynchrones\xa0",(0,l.mdx)("inlineCode",{parentName:"li"},"getNumber1()"),"\xa0et\xa0",(0,l.mdx)("inlineCode",{parentName:"li"},"getNumber2()"),"\xa0(avec\xa0",(0,l.mdx)("inlineCode",{parentName:"li"},"await"),") et renvoyer la somme des 2 valeurs r\xe9cup\xe9r\xe9es."),(0,l.mdx)("li",{parentName:"ol"},"Maintenant nous allons appeler notre fonction\xa0",(0,l.mdx)("inlineCode",{parentName:"li"},"compute()"),"\xa0et utiliser sa valeur de retour comme une\xa0",(0,l.mdx)("inlineCode",{parentName:"li"},"Promise"),"\xa0pour finalement afficher le\nr\xe9sultat de la promesse dans le contenu HTML de l'\xe9l\xe9ment ayant pour ID\xa0",(0,l.mdx)("inlineCode",{parentName:"li"},"result"),".")),(0,l.mdx)(i.sp,{codePenId:"NWqyaKP",mdxType:"CodePen"}),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"async function getNumber1() {\n  return 10;\n}\nasync function getNumber2() {\n  return 4;\n}\nasync function compute() {\n  const number1 = await getNumber1();\n  const number2 = await getNumber2();\n  return number1 + number2;\n}\ncompute() \n  .then(function(value) {\n    document\n      .getElementById(\"result\")\n      .innerText = value + '';\n});\n")),(0,l.mdx)("p",null,"Vous avez termin\xe9 ? Voici la ",(0,l.mdx)("a",{parentName:"p",href:"https://codepen.io/fabienhenon/pen/XWNGgvd"},"solution CodePen"),"."),(0,l.mdx)(i.sp,{codePenId:"XWNGgvd",mdxType:"CodePen"}),(0,l.mdx)("h3",{id:"en-r\xe9sum\xe9-1"},"En r\xe9sum\xe9"),(0,l.mdx)("p",null,"Dans ce chapitre, vous avez appris :"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},'Qu\'une\xa0callback est une fonction appel\xe9e "plus tard" ;'),(0,l.mdx)("li",{parentName:"ul"},"Que les\xa0",(0,l.mdx)("inlineCode",{parentName:"li"},"Promise"),"\xa0sont des objets qui nous fournissent les fonctions ",(0,l.mdx)("em",{parentName:"li"},(0,l.mdx)("inlineCode",{parentName:"em"},"then()"))," et ",(0,l.mdx)("em",{parentName:"li"},(0,l.mdx)("inlineCode",{parentName:"em"},"catch()"))," pour g\xe9rer le code asynchrone ;"),(0,l.mdx)("li",{parentName:"ul"},"Que ",(0,l.mdx)("inlineCode",{parentName:"li"},"async"),"\xa0et\xa0",(0,l.mdx)("inlineCode",{parentName:"li"},"await"),"\xa0permettent de faire de l\u2019asynchrone avec une syntaxes plus naturelle, et qu\u2019ils utilisent en arri\xe8re plan les\n",(0,l.mdx)("em",{parentName:"li"},"Promise."))),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},"Nous connaissons maintenant 3 techniques pour faire du code asynchrone et pouvoir utiliser sa valeur ; voyons maintenant comment \xe7a peut nous\nservir dans le cas de plusieurs requ\xeates HTTP !")),(0,l.mdx)("hr",null),(0,l.mdx)("h2",{id:"parall\xe9lisez-plusieurs-requ\xeates-http"},"Parall\xe9lisez plusieurs requ\xeates HTTP"),(0,l.mdx)("p",null,(0,l.mdx)("a",{parentName:"p",href:"https://openclassrooms.com/fr/courses/5543061-ecrivez-du-javascript-pour-le-web/5866911-parallelisez-plusieurs-requetes-http"},"Parall\xe9lisez plusieurs requ\xeates HTTP - \xc9crivez du JavaScript pour le web - OpenClassrooms")),(0,l.mdx)(i.fG,{vimeoId:"539128158",mdxType:"Vimeo"}),(0,l.mdx)("br",null),(0,l.mdx)("p",null,"Dans ce chapitre, nous allons voir comment ",(0,l.mdx)("strong",{parentName:"p"},"encha\xeener")," les requ\xeates HTTP en ex\xe9cutant 2 requ\xeates GET\xa0en m\xeame temps (en parall\xe8le), puis 1\nrequ\xeate POST une fois que les 2 requ\xeates pr\xe9c\xe9dentes sont termin\xe9es (en s\xe9quence). Pour cela, nous allons avoir besoin des techniques\nasynchrones vues au chapitre pr\xe9c\xe9dent."),(0,l.mdx)("h3",{id:"encha\xeenez-des-requ\xeates-avec-les-callbacks"},"Encha\xeenez des requ\xeates avec les callbacks"),(0,l.mdx)("p",null,"Voyons ensemble comment faire nos 2 requ\xeates ",(0,l.mdx)("strong",{parentName:"p"},"en parall\xe8le"),", suivies d'une requ\xeate ",(0,l.mdx)("strong",{parentName:"p"},"en s\xe9quence")," avec les\xa0callbacks. Et vous verrez, \xe7a\npeut vite devenir complexe !"),(0,l.mdx)("blockquote",null,(0,l.mdx)("p",{parentName:"blockquote"},"Pour cet exemple, nous partons du principe que nous avons acc\xe8s \xe0 2 fonctions (",(0,l.mdx)("inlineCode",{parentName:"p"},"get"),"\xa0et ",(0,l.mdx)("inlineCode",{parentName:"p"},"post"),"). Elles font respectivement une requ\xeate ",(0,l.mdx)("inlineCode",{parentName:"p"},"GET"),"\net une requ\xeate ",(0,l.mdx)("inlineCode",{parentName:"p"},"POST"),"\xa0et elles prennent en param\xe8tre :"),(0,l.mdx)("ul",{parentName:"blockquote"},(0,l.mdx)("li",{parentName:"ul"},"l'URL de la requ\xeate,"),(0,l.mdx)("li",{parentName:"ul"},"une callback \xe0 ex\xe9cuter quand on a le r\xe9sultat (avec une variable d'erreur en premier param\xe8tre)."))),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"var GETRequestCount = 0;\nvar GETRequestResults = [];\nfunction onGETRequestDone(err, result) {\n    if (err) throw err;\n    GETRequestCount++;\n    GETRequestResults.push(result);\n    if (GETRequestCount == 2) {\n        post(url3, function(err, result) {\n            if (err) throw err;\n            // We are done here !\n        });\n    }\n}\n\nget(url1, onGETRequestDone);\nget(url2, onGETRequestDone);\n")),(0,l.mdx)("p",null,"Comme vous pouvez le voir, le code est assez particulier \xe0 lire. Il y\xa0a\xa0d'autres fa\xe7ons d'\xe9crire ce code, mais \xe7a reste une des fa\xe7ons les plus\nsimples et rapides \xe0 \xe9crire."),(0,l.mdx)("p",null,"Afin d'ex\xe9cuter 2 requ\xeates ",(0,l.mdx)("inlineCode",{parentName:"p"},"GET"),"\xa0en m\xeame temps, nous pouvons appeler 2 fois la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"get()"),". \xc9tant donn\xe9 que cette fonction est\n",(0,l.mdx)("strong",{parentName:"p"},"asynchrone"),", elle ne bloquera pas l'ex\xe9cution du code. Ainsi l'autre fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"get()"),"\xa0sera aussi appel\xe9e alors que la premi\xe8re ne sera pas\nencore termin\xe9e. C'est comme \xe7a qu'on peut avoir 2 requ\xeates en parall\xe8le."),(0,l.mdx)("p",null,"Par contre, nous voulons ex\xe9cuter une requ\xeate ",(0,l.mdx)("inlineCode",{parentName:"p"},"POST"),"\xa0une fois que les ",(0,l.mdx)("strong",{parentName:"p"},"2 requ\xeates ",(0,l.mdx)("inlineCode",{parentName:"strong"},"GET"),"\xa0sont termin\xe9es"),", et pas avant ! Pour ce faire, nous\ndevons savoir si les requ\xeates ",(0,l.mdx)("inlineCode",{parentName:"p"},"GET"),"\xa0sont termin\xe9es. C'est pour \xe7a que la variable ",(0,l.mdx)("inlineCode",{parentName:"p"},"GETRequestCount"),"\xa0est cr\xe9\xe9e. On va l'",(0,l.mdx)("strong",{parentName:"p"},"incr\xe9menter")," dans la\nfonction ",(0,l.mdx)("em",{parentName:"p"},"callback")," que l'on a envoy\xe9e aux appels \xe0 ",(0,l.mdx)("inlineCode",{parentName:"p"},"get()"),", et si on atteint 2 (le nombre de requ\xeates ",(0,l.mdx)("inlineCode",{parentName:"p"},"GET"),"\xa0qu'on a faites), alors on va\nex\xe9cuter la requ\xeate ",(0,l.mdx)("inlineCode",{parentName:"p"},"POST"),"."),(0,l.mdx)("div",{className:"admonition admonition-info alert alert--info"},(0,l.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,l.mdx)("h5",{parentName:"div"},(0,l.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,l.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.mdx)("div",{parentName:"div",className:"admonition-content"},(0,l.mdx)("p",{parentName:"div"},(0,l.mdx)("inlineCode",{parentName:"p"},"GETRequestResults"),"\xa0sert \xe0 conserver les r\xe9ponses des requ\xeates ",(0,l.mdx)("inlineCode",{parentName:"p"},"GET"),", car on ne les a pas toutes les 2 en m\xeame temps."))),(0,l.mdx)("h3",{id:"encha\xeenez-des-requ\xeates-avec-les-promise"},"Encha\xeenez des requ\xeates avec les Promise"),(0,l.mdx)("p",null,"Gr\xe2ce \xe0 la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise.all"),", voyons comment ex\xe9cuter nos requ\xeates en parall\xe8le et en s\xe9quence avec les ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"."),(0,l.mdx)("blockquote",null,(0,l.mdx)("p",{parentName:"blockquote"},"Pour cet exemple, nous partons du principe que nous avons acc\xe8s \xe0 2 fonctions (",(0,l.mdx)("inlineCode",{parentName:"p"},"get"),"\xa0et ",(0,l.mdx)("inlineCode",{parentName:"p"},"post"),") qui font respectivement une requ\xeate ",(0,l.mdx)("inlineCode",{parentName:"p"},"GET")," et\nune requ\xeate ",(0,l.mdx)("inlineCode",{parentName:"p"},"POST"),"\xa0quand on leur passe en param\xe8tre l'URL de la requ\xeate. Ces fonctions retourneront une ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"\xa0avec le r\xe9sultat de la\nrequ\xeate.")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"Promise.all([get(url1), get(url2)])\n    .then(function(results) {\n        return Promise.all([results, post(url3)]];\n    })\n    .then(function(allResults) {\n        // We are done here !\n    });\n")),(0,l.mdx)("p",null,"Ici, nous utilisons la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise.all"),"\xa0qui prend en param\xe8tre une liste de ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"\xa0(cela peut aussi \xeatre de simples valeurs qui sont\nalors transform\xe9es en ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"\xa0r\xe9solues), et qui permet de toutes les ex\xe9cuter en parall\xe8le et de retourner une nouvelle ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"\xa0qui sera\nr\xe9solue quand toutes les ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"\xa0seront r\xe9solues."),(0,l.mdx)("p",null,"Ainsi, la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"then()"),"\xa0recevra les r\xe9sultats de toutes les ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),"\xa0sous forme d'un tableau."),(0,l.mdx)("p",null,"Afin d'ex\xe9cuter notre requ\xeate ",(0,l.mdx)("inlineCode",{parentName:"p"},"POST"),"\xa0une fois que les requ\xeates ",(0,l.mdx)("inlineCode",{parentName:"p"},"GET"),"\xa0sont termin\xe9es, nous l'ex\xe9cutons donc dans la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"then()"),"."),(0,l.mdx)("div",{className:"admonition admonition-info alert alert--info"},(0,l.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,l.mdx)("h5",{parentName:"div"},(0,l.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,l.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.mdx)("div",{parentName:"div",className:"admonition-content"},(0,l.mdx)("p",{parentName:"div"},"Notez que dans la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"then()"),", nous faisons encore une fois appel \xe0 la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise.all"),"\xa0en lui passant les r\xe9sultats des requ\xeates\n",(0,l.mdx)("inlineCode",{parentName:"p"},"GET"),"\xa0et notre requ\xeate ",(0,l.mdx)("inlineCode",{parentName:"p"},"POST"),". \xc9tant donn\xe9 que ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise.all")," consid\xe8re les simples valeurs comme des ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise")," r\xe9solues, cela nous permet, dans\nle prochain ",(0,l.mdx)("inlineCode",{parentName:"p"},"then()"),", de r\xe9cup\xe9rer une liste qui contient les r\xe9sultats des requ\xeates ",(0,l.mdx)("inlineCode",{parentName:"p"},"GET"),"\xa0et le r\xe9sultat de la requ\xeate ",(0,l.mdx)("inlineCode",{parentName:"p"},"POST"),"\xa0:\n",(0,l.mdx)("inlineCode",{parentName:"p"},"allResults = [ [ getResult1, getResult2 ], postResult ]"),"."))),(0,l.mdx)("h3",{id:"encha\xeenez-des-requ\xeates-avec-asyncawait"},"Encha\xeenez des requ\xeates avec async/await"),(0,l.mdx)("p",null,"Finalement, voyons comment ex\xe9cuter le m\xeame code mais avec ",(0,l.mdx)("inlineCode",{parentName:"p"},"async"),"\xa0/ ",(0,l.mdx)("inlineCode",{parentName:"p"},"await"),"."),(0,l.mdx)("blockquote",null,(0,l.mdx)("p",{parentName:"blockquote"},"Pour cet exemple, nous partons du principe que nous avons acc\xe8s \xe0 2 fonctions (",(0,l.mdx)("inlineCode",{parentName:"p"},"get"),"\xa0et ",(0,l.mdx)("inlineCode",{parentName:"p"},"post"),") qui font respectivement une requ\xeate ",(0,l.mdx)("inlineCode",{parentName:"p"},"GET")," et\nune requ\xeate ",(0,l.mdx)("inlineCode",{parentName:"p"},"POST"),"\xa0quand on leur passe en param\xe8tre l'URL de la requ\xeate. Ces fonctions sont asynchrones (avec le mot cl\xe9 ",(0,l.mdx)("inlineCode",{parentName:"p"},"async"),").")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"async function requests() {\n    var getResults = await Promise.all([get(url1), get(url2)]);\n    var postResult = await post(url3);\n    return [getResults, postResult\\];\n}\nrequests().then(function(allResults) {\n    // We are done here !\n});\n")),(0,l.mdx)("p",null,"Nous utilisons aussi la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise.all"),"\xa0dans ce code, car c'est comme \xe7a que l'on peut ex\xe9cuter des fonctions asynchrones en parall\xe8le\n(rappelez-vous que ",(0,l.mdx)("inlineCode",{parentName:"p"},"async"),"\xa0correspond en arri\xe8re-plan \xe0 une ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise"),")."),(0,l.mdx)("p",null,"Par contre, ici, nous utilisons ",(0,l.mdx)("inlineCode",{parentName:"p"},"await"),"\xa0devant ",(0,l.mdx)("inlineCode",{parentName:"p"},"Promise.all"),"\xa0afin d'attendre la fin de l'ex\xe9cution des 2 requ\xeates ",(0,l.mdx)("inlineCode",{parentName:"p"},"GET"),", puis nous utilisons\n",(0,l.mdx)("inlineCode",{parentName:"p"},"await"),"\xa0devant la requ\xeate ",(0,l.mdx)("inlineCode",{parentName:"p"},"POST"),"\xa0afin d'attendre son r\xe9sultat. Puis nous renvoyons un tableau avec tous les r\xe9sultats."),(0,l.mdx)("p",null,"Lorsque nous appelons la fonction ",(0,l.mdx)("inlineCode",{parentName:"p"},"requests()"),", ici, nous utilisons ",(0,l.mdx)("inlineCode",{parentName:"p"},"then()"),"\xa0pour r\xe9cup\xe9rer tous les r\xe9sultats (mais vous auriez aussi pu\nutiliser ",(0,l.mdx)("inlineCode",{parentName:"p"},"await"),"\xa0au sein d'une autre fonction avec le mot cl\xe9\xa0",(0,l.mdx)("inlineCode",{parentName:"p"},"async"),")."),(0,l.mdx)("h3",{id:"en-r\xe9sum\xe9-2"},"En r\xe9sum\xe9"),(0,l.mdx)("p",null,"Dans ce chapitre, vous avez appris :"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"\xc0 encha\xeener des requ\xeates avec la m\xe9thode des callbacks ;"),(0,l.mdx)("li",{parentName:"ul"},"\xc0 encha\xeener des requ\xeates avec la m\xe9thode des ",(0,l.mdx)("inlineCode",{parentName:"li"},"Promise"),"\xa0;"),(0,l.mdx)("li",{parentName:"ul"},"\xc0\xa0encha\xeener des requ\xeates avec la m\xe9thode ",(0,l.mdx)("inlineCode",{parentName:"li"},"async"),"\xa0/ ",(0,l.mdx)("inlineCode",{parentName:"li"},"await"),".")),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},"Vous connaissez maintenant 3 techniques pour ex\xe9cuter du code asynchrone et vous savez les mettre en situation. \xc0 vous maintenant de vous\nfaire votre propre avis sur celle que vous pr\xe9f\xe9rez utiliser. Il est temps maintenant de passer \xe0 la prochaine partie o\xf9 nous verrons comment\ncoder en JavaScript dans un environnement plus efficace.\xa0 \ud83d\ude0e")),(0,l.mdx)("hr",null),(0,l.mdx)("h2",{id:"quiz--parall\xe9lisez-vos-longues-t\xe2ches-avec-la-programmation-asynchrone"},"Quiz : Parall\xe9lisez vos longues t\xe2ches avec la programmation asynchrone"),(0,l.mdx)("p",null,(0,l.mdx)("a",{parentName:"p",href:"https://openclassrooms.com/fr/courses/5543061-ecrivez-du-javascript-pour-le-web/exercises/3197"},"Parall\xe9lisez vos longues t\xe2ches avec la programmation asynchrone - OpenClassrooms")),(0,l.mdx)("h4",{id:"comp\xe9tences-\xe9valu\xe9es"},"Comp\xe9tences \xe9valu\xe9es"),(0,l.mdx)("i",{class:"bi bi-check2-circle"})," Utiliser des m\xe9thodes asynchrones",(0,l.mdx)("hr",null),(0,l.mdx)("h4",{id:"question-1--que-peut-on-dire-du-langage-javascript-"},"Question 1 : Que peut-on dire du langage JavaScript ?"),(0,l.mdx)("i",{class:"bi bi-circle"})," Qu'il est asynchrone et mono-thread",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-record-circle"})," Qu'il est synchrone et mono-thread",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"})," Qu'il est asynchrone et multi-thread",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"})," Qu'il est synchrone et multi-thread",(0,l.mdx)("br",null),(0,l.mdx)("br",null),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},"Le JavaScript est un langage synchrone et mono-thread. L'asynchrone se fait gr\xe2ce \xe0 l'event loop en envoyant des fonctions dans sa file\nd'attente.")),(0,l.mdx)("hr",null),(0,l.mdx)("h4",{id:"question-2--quest-ce-que-levent-loop-"},"Question 2 : Qu'est-ce que l'event loop ?"),(0,l.mdx)("i",{class:"bi bi-record-circle"})," Un gros tunnel mono-thread dans lequel sont empil\xe9es des fonctions qui vont \xeatre ex\xe9cut\xe9es les unes apr\xe8s les autres",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"})," Un gros tunnel multi-thread dans lequel les fonctions vont \xeatre parall\xe9lis\xe9es pour \xeatre ex\xe9cut\xe9es de mani\xe8re asynchrone",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"})," Une simple boucle \xa0`for`\xa0 dans laquelle on ex\xe9cute g\xe9n\xe9ralement des \xe9v\xe9nements",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"})," Cela\xa0n'existe pas",(0,l.mdx)("br",null),(0,l.mdx)("br",null),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},"On peut voir l'event loop comme \xe9tant un tunnel mono-thread dans lequel on va mettre en file d'attente des fonctions pour\xa0d\xe9caler leur\nex\xe9cution.")),(0,l.mdx)("hr",null),(0,l.mdx)("h4",{id:"question-3--quaffiche-cet-extrait-"},"Question 3 : Qu\u2019affiche cet extrait ?"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},'setTimeout(function() {\n    console.log("Prems");\n});\nconsole.log("Deuz");\n')),(0,l.mdx)("i",{class:"bi bi-circle"}),(0,l.mdx)("code",null,"Prems"),", puis ",(0,l.mdx)("code",null,"Deuz"),(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-record-circle"}),(0,l.mdx)("code",null,"Deuz"),", puis ",(0,l.mdx)("code",null,"Prems"),(0,l.mdx)("br",null),(0,l.mdx)("br",null),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("inlineCode",{parentName:"em"},"setTimeout")," sert \xe0 retarder l'ex\xe9cution d'une fonction du temps indiqu\xe9. Il va ajouter la fonction pass\xe9e en param\xe8tre \xe0 l'event loop, et\ndemander \xe0 attendre un certain temps avant de l'ex\xe9cuter. Si aucun temps n\u2019est pass\xe9 \xe0 la fonction (comme dans notre exemple), alors notre\ncallback sera ex\xe9cut\xe9e au prochain tour de l\u2019event loop, et donc apr\xe8s ",(0,l.mdx)("inlineCode",{parentName:"em"},"Deuz"),".")),(0,l.mdx)("hr",null),(0,l.mdx)("h4",{id:"question-4--quest-ce-quunecallback-"},"Question 4 : Qu'est-ce qu'une\xa0callback ?"),(0,l.mdx)("i",{class:"bi bi-circle"})," Une fonction qui va ex\xe9cuter une autre fonction lorsqu'elle a termin\xe9 ce qu'elle devait faire",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-record-circle"})," Une fonction qui sera ex\xe9cut\xe9e par une autre fonction lorsque cette derni\xe8re aura termin\xe9 ce qu'elle devait faire",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"})," Une fonction qui va r\xe9cup\xe9rer toutes les informations de navigation d'un utilisateur",(0,l.mdx)("br",null),(0,l.mdx)("br",null),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},"La diff\xe9rence est subtile : une callback est une fonction (appelons-la\xa0",(0,l.mdx)("inlineCode",{parentName:"em"},"cb"),") que l'on passe en param\xe8tre \xe0 une autre fonction (appelons-la\n",(0,l.mdx)("inlineCode",{parentName:"em"},"fn"),"). C'est ",(0,l.mdx)("inlineCode",{parentName:"em"},"fn"),"\xa0qui va ex\xe9cuter ",(0,l.mdx)("inlineCode",{parentName:"em"},"cb"),"\xa0lorsqu'elle aura fini ce qu'elle doit faire.")),(0,l.mdx)("hr",null),(0,l.mdx)("h4",{id:"question-5--quest-ce-quune-promise"},"Question 5 : Qu'est-ce qu'une ",(0,l.mdx)("inlineCode",{parentName:"h4"},"Promise"),"\xa0?"),(0,l.mdx)("i",{class:"bi bi-circle"})," Une promesse que l'on ne tient jamais (comme toutes les promesses)",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"})," Un objet JavaScript qui n'aura jamais de valeur",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-record-circle"})," Un objet JavaScript d\xe9di\xe9 aux traitements asynchrones",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"})," Une fonction qui\xa0promet d'ex\xe9cuter du code dans un d\xe9lai imparti",(0,l.mdx)("br",null),(0,l.mdx)("br",null),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},"Une ",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise")," est un objet JavaScript utilis\xe9 pour r\xe9aliser des traitements asynchrones tels que des appels API (GET, POST, etc.). Elle\ndispose de plusieurs statuts :")),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("em",{parentName:"li"},'"pending". La requ\xeate est en train d\u2019\xeatre r\xe9alis\xe9e.')),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("em",{parentName:"li"},'"resolve". La requ\xeate a \xe9t\xe9 r\xe9alis\xe9e et aucune erreur n\u2019a eu lieu. La fonction ',(0,l.mdx)("inlineCode",{parentName:"em"},"then()")," est appel\xe9e.")),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("em",{parentName:"li"},'"reject". Une erreur est survenue et le traitement asynchrone a \xe9chou\xe9. La fonction ',(0,l.mdx)("inlineCode",{parentName:"em"},"catch()")," est appel\xe9e."))),(0,l.mdx)("hr",null),(0,l.mdx)("h4",{id:"question-6--quaffiche-ce-code-"},"Question 6 : Qu\u2019affiche ce code ?"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"async function num1() { return 42; }\nasync function num2() { return Promise.resolve(3); }\n\nasync function compute() {\n    const n1 = await num1();\n    const n2 = await num2();\n    return n1 + n2;\n}\n\ncompute()\n    .then(function(res) {\n        console.log(res);\n    })\n    .catch(function() {\n        console.log(\u201cErreur\u201d);\n});\n")),(0,l.mdx)("i",{class:"bi bi-record-circle"})," 45",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"})," Une ",(0,l.mdx)("i",null,"Promise"),(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"}),' "Erreur"',(0,l.mdx)("br",null),(0,l.mdx)("br",null),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("inlineCode",{parentName:"em"},"async")," et ",(0,l.mdx)("inlineCode",{parentName:"em"},"await")," sont des mots cl\xe9s du langage JavaScript qui permettent de cr\xe9er du code asynchrone qui utilisera les ",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise")," en\narri\xe8re-plan. Dans notre exemple, la fonction ",(0,l.mdx)("inlineCode",{parentName:"em"},"compute")," r\xe9cup\xe8re le r\xe9sultat des fonctions ",(0,l.mdx)("inlineCode",{parentName:"em"},"num1")," et ",(0,l.mdx)("inlineCode",{parentName:"em"},"num2")," en attendant que leur ",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise"),"\nsoit r\xe9solue (ce qui est imm\xe9diatement le cas de nos 2 fonctions car l\u2019une renvoie directement une valeur num\xe9rique, et l\u2019autre utilise\n",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise.resolve()")," qui indique que la ",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise")," est r\xe9solue).")),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("inlineCode",{parentName:"em"},"compute")," renvoie donc une ",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise")," qui vaudra 45. Lorsqu\u2019on l\u2019appelle, ici, on utilise la fonction ",(0,l.mdx)("inlineCode",{parentName:"em"},"then()")," car ",(0,l.mdx)("inlineCode",{parentName:"em"},"async")," et ",(0,l.mdx)("inlineCode",{parentName:"em"},"await")," sont des\n",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise")," en arri\xe8re-plan, et on affiche le r\xe9sultat (45) dans la console.")),(0,l.mdx)("hr",null),(0,l.mdx)("h4",{id:"question-7--sachant-que-promise1-sera-r\xe9solue-avec-la-valeur-salut-et-que-promise2-sera-r\xe9solue-avec-toi-quaffiche-cet-extrait"},'Question 7 : Sachant que promise1 sera r\xe9solue avec la valeur "Salut", et que promise2 sera r\xe9solue avec "toi", qu\u2019affiche cet extrait\xa0?'),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},'Promise.all([promise1, promise2])\n.then(function(values) {\n    console.log(values.join(" "));\n});\n')),(0,l.mdx)("i",{class:"bi bi-circle"}),' ["Salut", "toi"]',(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-record-circle"}),' "Salut toi"',(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"}),' "Salut"',(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"}),' "toi"',(0,l.mdx)("br",null),(0,l.mdx)("br",null),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("inlineCode",{parentName:"em"},"Promise.all")," prend en param\xe8tre une liste de ",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise")," et retourne une nouvelle ",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise")," qui sera r\xe9solue une fois que toutes les ",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise"),"\nseront r\xe9solues. Cette ",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise"),"\xa0contiendra le r\xe9sultat de toutes les ",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise"),"\xa0sous forme de liste et en conservant l\u2019ordre dans la fonction\n",(0,l.mdx)("inlineCode",{parentName:"em"},"all()"),'. Ainsi, notre code affichera "Salut toi".')),(0,l.mdx)("hr",null),(0,l.mdx)("h4",{id:"question-8--que-fait-cet-extrait-"},"Question 8 : Que fait cet extrait ?"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"setInterval(callback, 1000);\n")),(0,l.mdx)("i",{class:"bi bi-circle"})," Il ex\xe9cute la callback au bout de 1 seconde",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"})," Il ex\xe9cute la callback au bout de 1\xa0000 secondes",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-record-circle"})," Il ex\xe9cute la callback toutes les 1 seconde",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"})," Il ex\xe9cute la callback toutes les 1\xa0000 secondes",(0,l.mdx)("br",null),(0,l.mdx)("br",null),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},(0,l.mdx)("inlineCode",{parentName:"em"},"setInterval")," permet d'ex\xe9cuter une fonction de callback toutes les X ms. La fonction prend le d\xe9lai en millisecondes et non en secondes.")),(0,l.mdx)("hr",null),(0,l.mdx)("h4",{id:"question-9--que-fait-ce-code-et-que-contient-la-variable-promiseres-"},"Question 9 : Que fait ce code et que contient la variable ",(0,l.mdx)("inlineCode",{parentName:"h4"},"promiseRes")," ?"),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"(Dans cet extrait nous utilisons la fonction ",(0,l.mdx)("inlineCode",{parentName:"strong"},"reduce")," . Elle permet de parcourir une liste et de la r\xe9duire \xe0 une seule valeur\xa0:\nl\u2019accumulateur. Pour en savoir plus, n\u2019h\xe9sitez pas \xe0 aller faire un tour sur la ",(0,l.mdx)("a",{parentName:"strong",href:"https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce"},"documentation de la fonction"),").")),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-javascript"},"async function func1() {\n    return 3;\n}\n\nasync function func2() {\n    return 4;\n}\n\nvar promiseRes =\n    Promise\n        .all([func1(), func2()])\n        .then(function(results) {\n            return results.reduce(function(acc, res) {\n                return acc * res;\n            }, 2);\n        })\n        .then(function(time) {\n            return setTimeout(callback, time * 1000);\n        });\n")),(0,l.mdx)("i",{class:"bi bi-record-circle"}),(0,l.mdx)("code",null,"promiseRes"),"\xa0vaut\xa0une promesse r\xe9solue avec l'identifiant de la fonction ",(0,l.mdx)("code",null,"setTimeout"),", et la callback est appel\xe9e apr\xe8s 24\xa0secondes",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"}),(0,l.mdx)("code",null,"promiseRes"),"\xa0vaut un identifiant de ",(0,l.mdx)("code",null,"setTimeout"),", et la callback est appel\xe9e apr\xe8s 12\xa0secondes",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"}),(0,l.mdx)("code",null,"promiseRes"),"\xa0vaut un identifiant de ",(0,l.mdx)("code",null,"setTimeout"),", et la callback est appel\xe9e apr\xe8s\xa024 secondes",(0,l.mdx)("br",null),(0,l.mdx)("i",{class:"bi bi-circle"}),(0,l.mdx)("code",null,"promiseRes"),"\xa0vaut une promesse r\xe9solue avec l'identifiant de la fonction ",(0,l.mdx)("code",null,"setTimeout"),", et la callback est appel\xe9e apr\xe8s 12\xa0secondes",(0,l.mdx)("br",null),(0,l.mdx)("br",null),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},"Ici nous ex\xe9cutons 2 fonctions asynchrones en parall\xe8le avec ",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise.all"),". La premi\xe8re fonction ",(0,l.mdx)("inlineCode",{parentName:"em"},"then()"),"\xa0va appeler ",(0,l.mdx)("inlineCode",{parentName:"em"},"reduce"),"\xa0sur la liste de\nr\xe9sultats (3, et 4) et multiplier les valeurs entre elles avec une valeur initiale de 2, soit\xa0: ",(0,l.mdx)("inlineCode",{parentName:"em"},"2 * 3 * 4 = 24"),".")),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},"Le r\xe9sultat est pass\xe9 \xe0 la prochaine fonction ",(0,l.mdx)("inlineCode",{parentName:"em"},"then()"),", qui va appeler une callback apr\xe8s ",(0,l.mdx)("inlineCode",{parentName:"em"},"time"),"\xa0secondes, ",(0,l.mdx)("inlineCode",{parentName:"em"},"time"),"\xa0correspondant ici \xe0 24, le\nr\xe9sultat du pr\xe9c\xe9dent ",(0,l.mdx)("inlineCode",{parentName:"em"},"then()"),".")),(0,l.mdx)("p",null,(0,l.mdx)("em",{parentName:"p"},"Enfin, on retourne le r\xe9sultat de la fonction ",(0,l.mdx)("inlineCode",{parentName:"em"},"setTimeout()"),", ",(0,l.mdx)("inlineCode",{parentName:"em"},"promiseRes"),"\xa0contient donc une ",(0,l.mdx)("inlineCode",{parentName:"em"},"Promise"),"\xa0qui sera r\xe9solue avec l'identifiant de\nla fonction ",(0,l.mdx)("inlineCode",{parentName:"em"},"setTimeout"),"\xa0retourn\xe9.")))}p.isMDXComponent=!0}}]);