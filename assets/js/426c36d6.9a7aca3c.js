"use strict";(self.webpackChunkmon_web_dev_wiki=self.webpackChunkmon_web_dev_wiki||[]).push([[2153],{22266:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return m},default:function(){return c}});var s=r(87462),t=r(63366),i=(r(67294),r(3905)),a=(r(9877),r(58215),r(56222)),o=["components"],u={sidebar_position:4},l="Mettez en place un syst\xe8me d'authentification sur votre application",d={unversionedId:"OpenClassrooms/Construisez_une_API_securisee_pour_une_application_d_avis_gastronomiques/Passez_au_Full_stack_avec_Node_js_Express_et_MongoDB/Mettez_en_place_un_syst\xe8me_d_authentification_sur_votre_application",id:"OpenClassrooms/Construisez_une_API_securisee_pour_une_application_d_avis_gastronomiques/Passez_au_Full_stack_avec_Node_js_Express_et_MongoDB/Mettez_en_place_un_syst\xe8me_d_authentification_sur_votre_application",title:"Mettez en place un syst\xe8me d'authentification sur votre application",description:"Optimisez la structure du back-end",source:"@site/docs/OpenClassrooms/6-Construisez_une_API_securisee_pour_une_application_d_avis_gastronomiques/2-Passez_au_Full_stack_avec_Node_js_Express_et_MongoDB/3-Mettez_en_place_un_syst\xe8me_d_authentification_sur_votre_application.mdx",sourceDirName:"OpenClassrooms/6-Construisez_une_API_securisee_pour_une_application_d_avis_gastronomiques/2-Passez_au_Full_stack_avec_Node_js_Express_et_MongoDB",slug:"/OpenClassrooms/Construisez_une_API_securisee_pour_une_application_d_avis_gastronomiques/Passez_au_Full_stack_avec_Node_js_Express_et_MongoDB/Mettez_en_place_un_syst\xe8me_d_authentification_sur_votre_application",permalink:"/Mon_Web_Dev_Wiki/docs/OpenClassrooms/Construisez_une_API_securisee_pour_une_application_d_avis_gastronomiques/Passez_au_Full_stack_avec_Node_js_Express_et_MongoDB/Mettez_en_place_un_syst\xe8me_d_authentification_sur_votre_application",editUrl:"https://github.com/gylgyl2000/Mon_Web_Dev_Wiki/edit/master/website/docs/OpenClassrooms/6-Construisez_une_API_securisee_pour_une_application_d_avis_gastronomiques/2-Passez_au_Full_stack_avec_Node_js_Express_et_MongoDB/3-Mettez_en_place_un_syst\xe8me_d_authentification_sur_votre_application.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"openClassroomsSidebar",previous:{title:"Cr\xe9ez une API RESTful",permalink:"/Mon_Web_Dev_Wiki/docs/OpenClassrooms/Construisez_une_API_securisee_pour_une_application_d_avis_gastronomiques/Passez_au_Full_stack_avec_Node_js_Express_et_MongoDB/Creez_une_API_RESTful"},next:{title:"Ajoutez une gestion des fichiers utilisateur sur l'application",permalink:"/Mon_Web_Dev_Wiki/docs/OpenClassrooms/Construisez_une_API_securisee_pour_une_application_d_avis_gastronomiques/Passez_au_Full_stack_avec_Node_js_Express_et_MongoDB/Ajoutez_une_gestion_des_fichiers_utilisateur_sur_l_application"}},m=[{value:"Optimisez la structure du back-end",id:"optimisez-la-structure-du-back-end",children:[{value:"Configurez le routage",id:"configurez-le-routage",children:[],level:3},{value:"Configurez les contr\xf4leurs",id:"configurez-les-contr\xf4leurs",children:[],level:3}],level:2},{value:"Pr\xe9parez la base de donn\xe9es pour les informations d&#39;authentification",id:"pr\xe9parez-la-base-de-donn\xe9es-pour-les-informations-dauthentification",children:[{value:"Comprenez le stockage de mot de passe s\xe9curis\xe9",id:"comprenez-le-stockage-de-mot-de-passe-s\xe9curis\xe9",children:[],level:3},{value:"Cr\xe9ez un mod\xe8le de donn\xe9es",id:"cr\xe9ez-un-mod\xe8le-de-donn\xe9es",children:[],level:3}],level:2},{value:"Cr\xe9ez des utilisateurs",id:"cr\xe9ez-des-utilisateurs",children:[{value:"Configurez les routes d&#39;authentification",id:"configurez-les-routes-dauthentification",children:[],level:3},{value:"Cr\xe9ez\xa0des utilisateurs",id:"cr\xe9ezdes-utilisateurs",children:[],level:3}],level:2},{value:"V\xe9rifiez les informations d&#39;identification d&#39;un utilisateur",id:"v\xe9rifiez-les-informations-didentification-dun-utilisateur",children:[{value:"Impl\xe9mentez la fonction\xa0login",id:"impl\xe9mentez-la-fonctionlogin",children:[],level:3}],level:2},{value:"Cr\xe9ez des tokens d&#39;authentification",id:"cr\xe9ez-des-tokens-dauthentification",children:[{value:"Cr\xe9ez des\xa0tokens d&#39;authentification",id:"cr\xe9ez-destokens-dauthentification",children:[],level:3}],level:2},{value:"Configurez le middleware d&#39;authentification",id:"configurez-le-middleware-dauthentification",children:[{value:"Impl\xe9mentez le <em>middleware</em> d&#39;authentification",id:"impl\xe9mentez-le-middleware-dauthentification",children:[],level:3},{value:"En r\xe9sum\xe9",id:"en-r\xe9sum\xe9",children:[],level:3}],level:2},{value:"Quiz : Savez-vous s\xe9curiser votre API ?",id:"quiz--savez-vous-s\xe9curiser-votre-api-",children:[{value:"Comp\xe9tences \xe9valu\xe9es",id:"comp\xe9tences-\xe9valu\xe9es",children:[],level:4},{value:"Question 1 : Dans une application Express, un contr\xf4leur\u2026",id:"question-1--dans-une-application-express-un-contr\xf4leur",children:[],level:4},{value:"Question 2 : Il est g\xe9n\xe9ralement acceptable de stocker des mots de passe non crypt\xe9s dans une base de donn\xe9es si cette base requiert un mot de passe d&#39;acc\xe8s.",id:"question-2--il-est-g\xe9n\xe9ralement-acceptable-de-stocker-des-mots-de-passe-non-crypt\xe9s-dans-une-base-de-donn\xe9es-si-cette-base-requiert-un-mot-de-passe-dacc\xe8s",children:[],level:4},{value:"Question 3 : Que fait la fonction\xa0<code>hash</code>\xa0de bcrypt ?",id:"question-3--que-fait-la-fonctionhashde-bcrypt-",children:[],level:4},{value:"Question 4 : Avec des hashs bcrypt, comment sait-on quand un utilisateur entre le bon mot de passe\xa0?",id:"question-4--avec-des-hashs-bcrypt-comment-sait-on-quand-un-utilisateur-entre-le-bon-mot-de-passe",children:[],level:4},{value:"Question 5 : Un <em>token</em> JWT est crypt\xe9 avec un algorithme unidirectionnel.",id:"question-5--un-token-jwt-est-crypt\xe9-avec-un-algorithme-unidirectionnel",children:[],level:4},{value:"Question 6 : Un <em>token</em> JWT, une fois sign\xe9, est valable ind\xe9finiment.",id:"question-6--un-token-jwt-une-fois-sign\xe9-est-valable-ind\xe9finiment",children:[],level:4},{value:"Question 7 : Les <em>tokens</em> JWT sont s\xe9curis\xe9s parce que :",id:"question-7--les-tokens-jwt-sont-s\xe9curis\xe9s-parce-que-",children:[],level:4},{value:"Question 8 : Dans quel header de requ\xeate envoie-t-on g\xe9n\xe9ralement un <em>token</em> ?",id:"question-8--dans-quel-header-de-requ\xeate-envoie-t-on-g\xe9n\xe9ralement-un-token-",children:[],level:4}],level:2}],p={toc:m};function c(e){var n=e.components,r=(0,t.Z)(e,o);return(0,i.mdx)("wrapper",(0,s.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"mettez-en-place-un-syst\xe8me-dauthentification-sur-votre-application"},"Mettez en place un syst\xe8me d'authentification sur votre application"),(0,i.mdx)("h2",{id:"optimisez-la-structure-du-back-end"},"Optimisez la structure du back-end"),(0,i.mdx)("p",null,(0,i.mdx)("a",{parentName:"p",href:"https://openclassrooms.com/fr/courses/6390246-passez-au-full-stack-avec-node-js-express-et-mongodb/6466459-optimisez-la-structure-du-back-end"},"Optimisez la structure du back-end - Passez au Full stack avec Node.js, Express et MongoDB - OpenClassrooms")),(0,i.mdx)(a.fG,{vimeoId:"373129314",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("p",null,"Avant de nous lancer dans le sujet complexe qu'est l'authentification, nous allons r\xe9organiser la structure de notre back-end pour\nen faciliter la compr\xe9hension et la gestion.\xa0Il est techniquement possible de conserver toute notre logique dans le fichier\n",(0,i.mdx)("inlineCode",{parentName:"p"},"app.js"),", mais ce fichier peut vite devenir bien trop volumineux, ce qui compliquerait la gestion. Par cons\xe9quent, rendons les\nchoses un peu plus modulaires."),(0,i.mdx)("h3",{id:"configurez-le-routage"},"Configurez le routage"),(0,i.mdx)(a.fG,{vimeoId:"374619536",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("p",null,"La premi\xe8re chose que nous allons faire est de dissocier notre logique de ",(0,i.mdx)("em",{parentName:"p"},"routing"),"\xa0et la logique globale de l'application.\xa0Cr\xe9ez,\ndans votre dossier\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"backend"),", un dossier\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"routes"),"\xa0puis, dans ce nouveau dossier, un fichier\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"stuff.js"),". Celui-ci contiendra la\nlogique de nos routes\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"stuff"),"\xa0:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"const express = require('express');\n\nconst router = express.Router();\n\nmodule.exports = router;\n")),(0,i.mdx)("p",null,"Ci-dessus, nous cr\xe9ons un routeur Express. Jusqu'\xe0 pr\xe9sent, nous avions enregistr\xe9 nos routes directement dans notre application.\nMaintenant, nous allons les enregistrer dans notre routeur Express,\xa0puis enregistrer celui-ci dans l'application."),(0,i.mdx)("p",null,"Il est temps de couper toutes nos routes de\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"app.js"),"\xa0et de les coller dans notre routeur. Veillez \xe0 remplacer toutes les\noccurrences de\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"app"),"\xa0par\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"router"),", car nous enregistrons les routes dans notre routeur :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"const express = require('express');\nconst router = express.Router();\n\nconst Thing = require('../models/thing');\n\nrouter.post('/', (req, res, next) => {\n    const thing = new Thing({\n        title: req.body.title,\n        description: req.body.description,\n        imageUrl: req.body.imageUrl,\n        price: req.body.price,\n        userId: req.body.userId\n    });\n    thing.save()\n    .then(() => { res.status(201).json({ message: 'Post saved successfully!' }); })\n    .catch((error) => { res.status(400).json({ error: error });});\n});\n\nrouter.get('/:id', (req, res, next) => {\n    Thing.findOne({ _id: req.params.id })\n    .then((thing) => { res.status(200).json(thing)})\n    .catch((error) => { res.status(404).json({ error: error }) });\n});\n\nrouter.put('/:id', (req, res, next) => {\n    const thing = new Thing({\n        _id: req.params.id,\n        title: req.body.title,\n        description: req.body.description,\n        imageUrl: req.body.imageUrl,\n        price: req.body.price,\n        userId: req.body.userId\n    });\n    Thing.updateOne({ _id: req.params.id }, thing)\n    .then(() => { res.status(201).json({ message: 'Thing updated successfully!' })})\n    .catch((error) => { res.status(400).json({ error: error })});\n});\n\nrouter.delete('/:id', (req, res, next) => {\n    Thing.deleteOne({ _id: req.params.id })\n    .then(() => { res.status(200).json({ message: 'Deleted!' })})\n    .catch((error) => { res.status(400).json({ error: error })});\n});\n\nrouter.get('/' + '', (req, res, next) => {\n    Thing.find()\n    .then((things) => { res.status(200).json(things)})\n    .catch((error) => { res.status(400).json({ error: error })});\n});\n\nmodule.exports = router;\n")),(0,i.mdx)("div",{className:"admonition admonition-info alert alert--info"},(0,i.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,i.mdx)("h5",{parentName:"div"},(0,i.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,i.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.mdx)("div",{parentName:"div",className:"admonition-content"},(0,i.mdx)("p",{parentName:"div"},(0,i.mdx)("inlineCode",{parentName:"p"},"/api/stuff"),"\xa0doit \xeatre supprim\xe9 de chaque segment de route. Si cela\xa0supprime une cha\xeene de route, veillez \xe0 laisser une barre\noblique\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"/")," (reportez-vous au code ci-dessus)."),(0,i.mdx)("p",{parentName:"div"},"Veillez \xe9galement \xe0 remplacer l'\xe9l\xe9ment\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"app.use()"),"\xa0final par\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"app.get()"),"\xa0si ce n'est pas d\xe9j\xe0 fait,\xa0car cette route ne concerne\nque les demandes\xa0GET."))),(0,i.mdx)("p",null,"Nous devons d\xe9sormais enregistrer notre nouveau routeur dans notre fichier\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"app.js"),". D'abord, nous devons l'importer :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"const stuffRoutes = require('./routes/stuff');\n")),(0,i.mdx)("p",null,"Nous l'enregistrerons ensuite comme nous le ferions pour une route unique. Nous voulons enregistrer notre routeur pour toutes les\ndemandes effectu\xe9es vers\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"/api/stuff"),". Par cons\xe9quent, tapez :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"app.use('/api/stuff', stuffRoutes);\n")),(0,i.mdx)("p",null,"Restez dans la section \xab Parties 1 + 2 \xbb pour le moment. Si vous actualisez l'application front-end, tout devrait encore\nfonctionner comme avant."),(0,i.mdx)("h3",{id:"configurez-les-contr\xf4leurs"},"Configurez les contr\xf4leurs"),(0,i.mdx)(a.fG,{vimeoId:"374619572",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("p",null,"Pour rendre notre structure encore plus modulaire, simplifier la lecture et la gestion de notre code, nous allons s\xe9parer la\nlogique m\xe9tier de nos routes en contr\xf4leurs."),(0,i.mdx)("p",null,"Cr\xe9ez un dossier\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"controllers"),"\xa0dans votre dossier\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"backend"),"\xa0et cr\xe9ez un autre fichier\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"stuff.js"),". Celui-ci sera notre contr\xf4leur\n",(0,i.mdx)("inlineCode",{parentName:"p"},"stuff"),".\xa0Copions le premier \xe9l\xe9ment de logique m\xe9tier\xa0de la route POST vers notre contr\xf4leur :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"// in controllers/stuff.js\n\nconst Thing = require('../models/thing');\n\nexports.createThing = (req, res, next) => {\n    const thing = new Thing({\n        title: req.body.title,\n        description: req.body.description,\n        imageUrl: req.body.imageUrl,\n        price: req.body.price,\n        userId: req.body.userId\n    });\n    thing.save()\n    .then(() => { res.status(201).json({ message: 'Post saved successfully!' })})\n    .catch((error) => { res.status(400).json({ error: error })});\n};\n")),(0,i.mdx)("p",null,"Ici,\xa0nous exposons la logique de notre route\xa0POST\xa0en tant que fonction appel\xe9e\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"createThing()"),".\xa0Pour r\xe9impl\xe9menter cela dans notre\nroute, nous devons importer notre contr\xf4leur puis enregistrer\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"createThing"),"\xa0:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"// in routes/stuff.js\n\nconst stuffCtrl = require('../controllers/stuff');\n\nrouter.get('/', stuffCtrl.getAllStuff);\n")),(0,i.mdx)("p",null,"Nous pouvons maintenant faire de m\xeame pour toutes nos autres routes. Voici le contr\xf4leur final :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"const Thing = require('../models/thing');\n\nexports.createThing = (req, res, next) => {\n    const thing = new Thing({\n        title: req.body.title,\n        description: req.body.description,\n        imageUrl: req.body.imageUrl,\n        price: req.body.price,\n        userId: req.body.userId\n    });\n    thing.save()\n    .then(() => { res.status(201).json({ message: 'Post saved successfully!' })})\n    .catch((error) => { res.status(400).json({ error: error })});\n};\n\nexports.getOneThing = (req, res, next) => {\n    Thing.findOne({ _id: req.params.id })\n    .then((thing) => { res.status(200).json(thing) })\n    .catch((error) => { res.status(404).json({ error: error })});\n};\n\nexports.modifyThing = (req, res, next) => {\n    const thing = new Thing({\n        _id: req.params.id,\n        title: req.body.title,\n        description: req.body.description,\n        imageUrl: req.body.imageUrl,\n        price: req.body.price,\n        userId: req.body.userId\n    });\n    Thing.updateOne({_id: req.params.id}, thing)\n    .then(() => { res.status(201).json({ message: 'Thing updated successfully!' })})\n    .catch((error) => { res.status(400).json({ error: error })});\n};\n\nexports.deleteThing = (req, res, next) => {\n    Thing.deleteOne({ _id: req.params.id })\n    .then(() => { res.status(200).json({ message: 'Deleted!' })})\n    .catch((error) => { res.status(400).json({ error: error })});\n};\n\nexports.getAllStuff = (req, res, next) => {\n    Thing.find()\n    .then((things) => { res.status(200).json(things); })\n    .catch((error) => { res.status(400).json({ error: error })});\n};\n")),(0,i.mdx)("p",null,"Voici notre routeur final :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"const express = require('express');\nconst router = express.Router();\n\nconst stuffCtrl = require('../controllers/stuff');\n\nrouter.get('/', stuffCtrl.getAllStuff);\nrouter.post('/', stuffCtrl.createThing);\nrouter.get('/:id', stuffCtrl.getOneThing);\nrouter.put('/:id', stuffCtrl.modifyThing);\nrouter.delete('/:id', stuffCtrl.deleteThing);\n\nmodule.exports = router;\n")),(0,i.mdx)("p",null,"Comme vous le voyez, cela facilite la compr\xe9hension de notre fichier de routeur. Il est \xe9vident quelles routes sont disponibles \xe0\nquels points de terminaison, et les noms descriptifs donn\xe9s aux fonctions de notre contr\xf4leur permettent de mieux comprendre la\nfonction de chaque route."),(0,i.mdx)("p",null,"Structurer le code\xa0de mani\xe8re modulaire\xa0comme\xa0cela n'est pas absolument n\xe9cessaire pour chaque projet, mais c'est une bonne\nhabitude \xe0 prendre car cela simplifie la maintenance."),(0,i.mdx)("p",null,"Maintenant que tout est pr\xeat, commen\xe7ons \xe0 impl\xe9menter l'authentification utilisateur."),(0,i.mdx)("hr",null),(0,i.mdx)("h2",{id:"pr\xe9parez-la-base-de-donn\xe9es-pour-les-informations-dauthentification"},"Pr\xe9parez la base de donn\xe9es pour les informations d'authentification"),(0,i.mdx)("p",null,(0,i.mdx)("a",{parentName:"p",href:"https://openclassrooms.com/fr/courses/6390246-passez-au-full-stack-avec-node-js-express-et-mongodb/6466473-preparez-la-base-de-donnees-pour-les-informations-dauthentification"},"Pr\xe9parez la base de donn\xe9es pour les informations d'authentification - Passez au Full stack avec Node.js, Express et MongoDB - OpenClassrooms")),(0,i.mdx)(a.fG,{vimeoId:"373134554",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("h3",{id:"comprenez-le-stockage-de-mot-de-passe-s\xe9curis\xe9"},"Comprenez le stockage de mot de passe s\xe9curis\xe9"),(0,i.mdx)("p",null,"Dans les chapitres suivants, nous impl\xe9menterons l'authentification par e-mail et mot de passe pour notre API. Cela implique de\nstocker des mots de passe utilisateur dans notre base de donn\xe9es d'une mani\xe8re ou d'une autre. Ce que nous ne voulons certainement\n",(0,i.mdx)("strong",{parentName:"p"},"pas")," faire est de les stocker sous la forme de texte brut : quiconque acc\xe9derait\xa0\xe0 notre base de donn\xe9es\xa0verrait la liste\ncompl\xe8te des informations de connexion de tous les utilisateurs. \xc0\xa0la place, nous stockerons\xa0le mot de passe de chaque utilisateur\nsous la forme d'un ",(0,i.mdx)("strong",{parentName:"p"},"hash"),"\xa0ou d'une cha\xeene chiffr\xe9e."),(0,i.mdx)("p",null,"Le package de chiffrement que nous utiliserons,\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"bcrypt"),",\xa0utilise un algorithme unidirectionnel pour chiffrer et cr\xe9er un\xa0hash des\nmots de passe\xa0utilisateur, que nous stockerons ensuite dans le document de la base de donn\xe9es relatif \xe0 chaque\xa0utilisateur.\nLorsqu'un utilisateur tentera de se connecter, nous utiliserons\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"bcrypt"),"\xa0pour cr\xe9er un\xa0hash avec le mot de passe entr\xe9, puis le\ncomparerons au\xa0hash stock\xe9 dans la base de donn\xe9es. Ces deux hash\xa0ne seront pas les m\xeames : cela poserait un probl\xe8me de\ns\xe9curisation, car les pirates informatiques n'auraient qu'\xe0 deviner les mots de passe jusqu'\xe0 ce que les\xa0hash correspondent. Le\npackage\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"bcrypt"),"\xa0permet d'indiquer si les deux\xa0hash ont \xe9t\xe9 g\xe9n\xe9r\xe9s \xe0 l'aide d'un m\xeame mot de passe initial. Il\xa0nous aidera donc \xe0\nimpl\xe9menter correctement le stockage et la v\xe9rification s\xe9curis\xe9s des mots de passe."),(0,i.mdx)("p",null,"La premi\xe8re \xe9tape de l'impl\xe9mentation de l'authentification est de cr\xe9er un mod\xe8le de base de donn\xe9es pour les informations de nos\nutilisateurs."),(0,i.mdx)("h3",{id:"cr\xe9ez-un-mod\xe8le-de-donn\xe9es"},"Cr\xe9ez un mod\xe8le de donn\xe9es"),(0,i.mdx)(a.fG,{vimeoId:"374619621",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("p",null,"Pour s'assurer que deux utilisateurs ne peuvent pas utiliser la m\xeame adresse e-mail, nous utiliserons\xa0le mot cl\xe9\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"unique"),"\xa0pour\nl'attribut\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"email"),"\xa0du sch\xe9ma d'utilisateur\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"userSchema"),". Les erreurs g\xe9n\xe9r\xe9es par d\xe9faut par MongoDB pouvant \xeatre difficiles \xe0\nr\xe9soudre, nous installerons un package de validation pour pr\xe9-valider les informations avant de les enregistrer :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-sh"},"npm install --save mongoose-unique-validator\n")),(0,i.mdx)("p",null,"Ce\xa0package une fois install\xe9,\xa0nous pouvons cr\xe9er notre propre mod\xe8le\xa0utilisateur :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"const mongoose = require('mongoose');\nconst uniqueValidator = require('mongoose-unique-validator');\n\nconst userSchema = mongoose.Schema({\n    email: { type: String, required: true, unique: true },\n    password: { type: String, required: true }\n});\n\nuserSchema.plugin(uniqueValidator);\n\nmodule.exports = mongoose.model('User', userSchema);\n")),(0,i.mdx)("p",null,"Dans notre sch\xe9ma, la valeur\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"unique"),", avec\xa0l'\xe9l\xe9ment\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"mongoose-unique-validator"),"\xa0pass\xe9 comme plug-in, s'assurera qu'aucun des\ndeux utilisateurs ne peut partager la m\xeame adresse e-mail."),(0,i.mdx)("p",null,"Maintenant que notre\xa0mod\xe8le est pr\xeat, nous allons commencer \xe0 l'utiliser dans le chapitre suivant pour enregistrer les nouveaux\nutilisateurs dans notre base de donn\xe9es et appliquer le chiffrement de mot de passe."),(0,i.mdx)("hr",null),(0,i.mdx)("h2",{id:"cr\xe9ez-des-utilisateurs"},"Cr\xe9ez des utilisateurs"),(0,i.mdx)("p",null,(0,i.mdx)("a",{parentName:"p",href:"https://openclassrooms.com/fr/courses/6390246-passez-au-full-stack-avec-node-js-express-et-mongodb/6466506-creez-des-utilisateurs"},"Cr\xe9ez des utilisateurs - Passez au Full stack avec Node.js, Express et MongoDB - OpenClassrooms")),(0,i.mdx)(a.fG,{vimeoId:"373129822",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("h3",{id:"configurez-les-routes-dauthentification"},"Configurez les routes d'authentification"),(0,i.mdx)(a.fG,{vimeoId:"374619645",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("p",null,"Commen\xe7ons par cr\xe9er l'infrastructure n\xe9cessaire \xe0 nos routes d'authentification. Il nous faudra un contr\xf4leur et un routeur, puis\nnous devrons enregistrer ce routeur dans notre application Express."),(0,i.mdx)("p",null,"D'abord,\xa0cr\xe9ez un fichier\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"user.js"),"\xa0dans votre dossier\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"controllers"),"\xa0:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"exports.signup = (req, res, next) => {\n\n};\n\nexports.login = (req, res, next) => {\n\n};\n")),(0,i.mdx)("p",null,"Nous impl\xe9menterons ces fonctions bient\xf4t. Pour l'instant, terminons la cr\xe9ation des routes."),(0,i.mdx)("p",null,"Pour ce faire, cr\xe9ez un autre fichier\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"user.js"),",\xa0cette fois dans votre dossier\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"routes"),"\xa0:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"const express = require('express');\nconst router = express.Router();\n\nconst userCtrl = require('../controllers/user');\n\nrouter.post('/signup', userCtrl.signup);\nrouter.post('/login', userCtrl.login);\n\nmodule.exports = router;\n")),(0,i.mdx)("p",null,"Les routes fournies sont celles pr\xe9vues par l'application front-end."),(0,i.mdx)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,i.mdx)("h5",{parentName:"div"},(0,i.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,i.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.mdx)("div",{parentName:"div",className:"admonition-content"},(0,i.mdx)("p",{parentName:"div"},"N'oubliez pas que le segment de route indiqu\xe9 ici est uniquement le segment final, car le reste de l'adresse de la route sera\nd\xe9clar\xe9 dans notre application Express."))),(0,i.mdx)("p",null,"Maintenant, enregistrons notre routeur dans notre application. Pour ce faire, importez le routeur :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"const userRoutes = require('./routes/user');\n")),(0,i.mdx)("p",null,"Puis enregistrez-le :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"app.use('/api/stuff', stuffRoutes);\napp.use('/api/auth', userRoutes);\n")),(0,i.mdx)("p",null,"Nos routes sont maintenant pr\xeates. Il est temps de commencer l'impl\xe9mentation de la logique m\xe9tier."),(0,i.mdx)("h3",{id:"cr\xe9ezdes-utilisateurs"},"Cr\xe9ez\xa0des utilisateurs"),(0,i.mdx)(a.fG,{vimeoId:"374619331",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("p",null,"Il nous faudra le package de chiffrement\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"bcrypt"),"\xa0pour notre fonction\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"signup"),". Installons-le donc dans notre projet :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-sh"},"npm install --save bcrypt\n")),(0,i.mdx)("p",null,"Nous pouvons l'importer dans notre contr\xf4leur et impl\xe9menter notre\xa0fonction\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"signup"),"\xa0(n'oubliez pas d'importer votre mod\xe8le\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"User"),"\xa0!) :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"exports.signup = (req, res, next) => {\n    bcrypt.hash(req.body.password, 10)\n    .then(hash => {\n        const user = new User({\n            email: req.body.email,\n            password: hash\n        });\n        user.save()\n        .then(() => res.status(201).json({ message: 'Utilisateur cr\xe9\xe9 !' }))\n        .catch(error => res.status(400).json({ error }));\n    })\n    .catch(error => res.status(500).json({ error }));\n};\n")),(0,i.mdx)("p",null,"Dans cette fonction :"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"nous appelons la fonction de\xa0hachage\xa0de\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"bcrypt"),"\xa0dans notre mot de passe et lui demandons de \xab saler\xa0\xbb le mot de passe 10 fois.\nPlus la valeur est \xe9lev\xe9e, plus l'ex\xe9cution de la fonction sera longue, et plus le\xa0hachage\xa0sera s\xe9curis\xe9. Pour plus d'informations,\nconsultez la\xa0",(0,i.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/package/bcrypt"},"documentation"),"\xa0de\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"bcrypt"),"\xa0;"),(0,i.mdx)("li",{parentName:"ul"},"il s'agit d'une fonction asynchrone qui renvoie une\xa0Promise dans laquelle nous recevons le\xa0hash g\xe9n\xe9r\xe9 ;"),(0,i.mdx)("li",{parentName:"ul"},"dans notre bloc\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"then"),", nous cr\xe9ons un utilisateur et l'enregistrons dans la base de donn\xe9es, en renvoyant une r\xe9ponse de\nr\xe9ussite en cas de succ\xe8s, et des erreurs avec le code d'erreur en cas d'\xe9chec ;")),(0,i.mdx)("p",null,"Dans le chapitre suivant, nous impl\xe9menterons notre fonction\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"login"),"\xa0pour v\xe9rifier les informations d'identification\xa0des\nutilisateurs pour leur permettre de se connecter."),(0,i.mdx)("hr",null),(0,i.mdx)("h2",{id:"v\xe9rifiez-les-informations-didentification-dun-utilisateur"},"V\xe9rifiez les informations d'identification d'un utilisateur"),(0,i.mdx)("p",null,(0,i.mdx)("a",{parentName:"p",href:"https://openclassrooms.com/fr/courses/6390246-passez-au-full-stack-avec-node-js-express-et-mongodb/6466533-verifiez-les-informations-didentification-dun-utilisateur"},"V\xe9rifiez les informations d'identification d'un utilisateur - Passez au Full stack avec Node.js, Express et MongoDB - OpenClassrooms")),(0,i.mdx)(a.fG,{vimeoId:"373129915",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("h3",{id:"impl\xe9mentez-la-fonctionlogin"},"Impl\xe9mentez la fonction\xa0login"),(0,i.mdx)(a.fG,{vimeoId:"374619383",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("p",null,"Maintenant que nous pouvons cr\xe9er des utilisateurs dans la base de donn\xe9es, il nous faut une m\xe9thode permettant de v\xe9rifier si un\nutilisateur qui tente de se connecter dispose d'identifiants valides. Impl\xe9mentons donc notre fonction\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"login"),"\xa0:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"exports.login = (req, res, next) => {\n    User.findOne({ email: req.body.email })\n    .then(user => {\n        if (!user) {\n            return res.status(401).json({ error: 'Utilisateur non trouv\xe9 !' });\n        }\n        bcrypt.compare(req.body.password, user.password)\n        .then(valid => {\n            if (!valid) {\n                return res.status(401).json({ error: 'Mot de passe incorrect !' });\n            }\n            res.status(200).json({\n                userId: user._id,\n                token: 'TOKEN'\n            });\n        })\n        .catch(error => res.status(500).json({ error }));\n    })\n    .catch(error => res.status(500).json({ error }));\n};\n")),(0,i.mdx)("p",null,"Dans cette fonction :"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"nous utilisons notre mod\xe8le Mongoose pour v\xe9rifier que l'e-mail entr\xe9 par l'utilisateur correspond \xe0 un utilisateur existant de\nla base de donn\xe9es\xa0:",(0,i.mdx)("ul",{parentName:"li"},(0,i.mdx)("li",{parentName:"ul"},"dans le cas contraire, nous renvoyons une erreur\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"401 Unauthorized"),","),(0,i.mdx)("li",{parentName:"ul"},"si l'e-mail correspond \xe0 un utilisateur existant, nous continuons ;"))),(0,i.mdx)("li",{parentName:"ul"},"nous utilisons la fonction\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"compare"),"\xa0de ",(0,i.mdx)("inlineCode",{parentName:"li"},"bcrypt"),"\xa0pour comparer le mot de passe entr\xe9 par l'utilisateur avec le\xa0hash enregistr\xe9\ndans la base de donn\xe9es\xa0:",(0,i.mdx)("ul",{parentName:"li"},(0,i.mdx)("li",{parentName:"ul"},"s'ils ne correspondent pas, nous renvoyons une erreur\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"401 Unauthorized"),"\xa0et un message \xab Mot de passe incorrect ! \xbb ;"),(0,i.mdx)("li",{parentName:"ul"},"s'ils correspondent, les informations d'identification de notre utilisateur sont valides. Dans ce cas, nous renvoyons une\nr\xe9ponse\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"200"),"\xa0contenant l'ID utilisateur et un ",(0,i.mdx)("em",{parentName:"li"},"token"),". Ce\xa0",(0,i.mdx)("em",{parentName:"li"},"token")," est une cha\xeene g\xe9n\xe9rique pour l'instant, mais nous allons le\nmodifier et le crypter dans le prochain chapitre.")))),(0,i.mdx)("p",null,"Avant d'utiliser la section \xab\xa0Partie 3\xa0\xbb de l'application front-end, supprimez tous les articles en vente de la section\n\xab\xa0Parties 1+2\xa0\xbb. Sinon, vous ne pourrez plus les modifier. En effet, comme ils ont \xe9t\xe9 cr\xe9\xe9s \xe0 l'aide d'un ID utilisateur\ng\xe9n\xe9rique, ils ne sont pas modifiables par des utilisateurs cr\xe9\xe9s \xe0 partir de maintenant."),(0,i.mdx)("p",null,"Dans le chapitre suivant, vous d\xe9couvrirez l'authentification par ",(0,i.mdx)("em",{parentName:"p"},"token"),", son r\xf4le, son mode de fonctionnement et comment nous\nl'appliquerons dans notre nouvelle application pour s\xe9curiser correctement notre API."),(0,i.mdx)("hr",null),(0,i.mdx)("h2",{id:"cr\xe9ez-des-tokens-dauthentification"},"Cr\xe9ez des tokens d'authentification"),(0,i.mdx)("p",null,(0,i.mdx)("a",{parentName:"p",href:"https://openclassrooms.com/fr/courses/6390246-passez-au-full-stack-avec-node-js-express-et-mongodb/6466557-creez-des-tokens-dauthentification"},"Cr\xe9ez des tokens d'authentification - Passez au Full stack avec Node.js, Express et MongoDB - OpenClassrooms")),(0,i.mdx)(a.fG,{vimeoId:"373130013",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("h3",{id:"cr\xe9ez-destokens-dauthentification"},"Cr\xe9ez des\xa0tokens d'authentification"),(0,i.mdx)(a.fG,{vimeoId:"374619436",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("p",null,"Les ",(0,i.mdx)("em",{parentName:"p"},"tokens")," d'authentification permettent aux utilisateurs de ne se connecter qu'une seule fois \xe0 leur compte. Au moment de se\nconnecter, ils\xa0recevront\xa0leur ",(0,i.mdx)("em",{parentName:"p"},"token")," et le renverront automatiquement \xe0 chaque requ\xeate par la suite. Ceci permettra au back-end\nde v\xe9rifier que la requ\xeate est authentifi\xe9e."),(0,i.mdx)("p",null,"Pour pouvoir cr\xe9er et v\xe9rifier les\xa0",(0,i.mdx)("em",{parentName:"p"},"tokens")," d'authentification, il nous faudra un nouveau package :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-sh"},"npm install --save jsonwebtoken\n")),(0,i.mdx)("p",null,"Nous l'importerons ensuite dans notre contr\xf4leur utilisateur :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"const jwt = require('jsonwebtoken');\n")),(0,i.mdx)("p",null,"Enfin, nous l'utiliserons\xa0dans notre fonction\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"login"),"\xa0:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"exports.login = (req, res, next) => {\n    User.findOne({ email: req.body.email })\n    .then(user => {\n        if (!user) {\n            return res.status(401).json({ error: 'Utilisateur non trouv\xe9 !' });\n        }\n        bcrypt.compare(req.body.password, user.password)\n        .then(valid => {\n            if (!valid) {\n                return res.status(401).json({ error: 'Mot de passe incorrect !' });\n            }\n            res.status(200).json({\n                userId: user._id,\n                token: jwt.sign(\n                    { userId: user._id },\n                    'RANDOM_TOKEN_SECRET',\n                    { expiresIn: '24h' }\n                )\n            });\n        })\n        .catch(error => res.status(500).json({ error }));\n    })\n    .catch(error => res.status(500).json({ error }));\n};\n")),(0,i.mdx)("p",null,"Dans le code ci-dessus :"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"nous utilisons la fonction\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"sign"),"\xa0de ",(0,i.mdx)("inlineCode",{parentName:"li"},"jsonwebtoken"),"\xa0pour encoder un nouveau\xa0",(0,i.mdx)("em",{parentName:"li"},"token")," ;"),(0,i.mdx)("li",{parentName:"ul"},"ce\xa0",(0,i.mdx)("em",{parentName:"li"},"token")," contient l'ID de l'utilisateur en tant que\xa0",(0,i.mdx)("em",{parentName:"li"},"payload")," (les donn\xe9es encod\xe9es dans le ",(0,i.mdx)("em",{parentName:"li"},"token"),") ;"),(0,i.mdx)("li",{parentName:"ul"},"nous utilisons une cha\xeene secr\xe8te de d\xe9veloppement temporaire\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"RANDOM_SECRET_KEY"),"\xa0pour encoder notre\xa0",(0,i.mdx)("em",{parentName:"li"},"token")," (\xe0 remplacer par\nune cha\xeene al\xe9atoire beaucoup plus longue pour la production) ;"),(0,i.mdx)("li",{parentName:"ul"},"nous d\xe9finissons la dur\xe9e de validit\xe9 du\xa0",(0,i.mdx)("em",{parentName:"li"},"token"),"\xa0\xe0 24 heures. L'utilisateur devra donc se reconnecter au bout de 24 heures ;"),(0,i.mdx)("li",{parentName:"ul"},"nous renvoyons le\xa0",(0,i.mdx)("em",{parentName:"li"},"token")," au front-end\xa0avec notre r\xe9ponse.")),(0,i.mdx)("p",null,"Vous pouvez d\xe9sormais utiliser l'onglet \xab R\xe9seau\xa0\xbb de Chrome\xa0DevTools\xa0pour v\xe9rifier que, une fois connect\xe9, chaque\xa0requ\xeate\nprovenant du front-end contient bien un en-t\xeate \xab\xa0Authorization\xa0\xbb avec le mot-cl\xe9 \xab\xa0Bearer\xa0\xbb et une longue cha\xeene encod\xe9e. Il\ns'agit de notre ",(0,i.mdx)("em",{parentName:"p"},"token")," !"),(0,i.mdx)("p",null,"Dans le chapitre suivant, nous cr\xe9erons un \xe9l\xe9ment de ",(0,i.mdx)("em",{parentName:"p"},"middleware")," pour v\xe9rifier ce\xa0",(0,i.mdx)("em",{parentName:"p"},"token")," et son contenu afin de nous assurer\nque seules les\xa0requ\xeates\xa0autoris\xe9es ont acc\xe8s aux routes \xe0 prot\xe9ger."),(0,i.mdx)("hr",null),(0,i.mdx)("h2",{id:"configurez-le-middleware-dauthentification"},"Configurez le middleware d'authentification"),(0,i.mdx)("p",null,(0,i.mdx)("a",{parentName:"p",href:"https://openclassrooms.com/fr/courses/6390246-passez-au-full-stack-avec-node-js-express-et-mongodb/6466605-configurez-le-middleware-dauthentification"},"Configurez le middleware d'authentification - Passez au Full stack avec Node.js, Express et MongoDB - OpenClassrooms")),(0,i.mdx)(a.fG,{vimeoId:"373130160",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("h3",{id:"impl\xe9mentez-le-middleware-dauthentification"},"Impl\xe9mentez le ",(0,i.mdx)("em",{parentName:"h3"},"middleware")," d'authentification"),(0,i.mdx)(a.fG,{vimeoId:"374619488",mdxType:"Vimeo"}),(0,i.mdx)("br",null),(0,i.mdx)("p",null,"Nous allons \xe0 pr\xe9sent cr\xe9er le ",(0,i.mdx)("em",{parentName:"p"},"middleware")," qui prot\xe9gera les routes s\xe9lectionn\xe9es et v\xe9rifier que l'utilisateur est authentifi\xe9\navant d'autoriser l'envoi de ses requ\xeates."),(0,i.mdx)("p",null,"Cr\xe9ez un dossier\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"middleware"),"\xa0et un fichier\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"auth.js"),"\xa0\xe0 l'int\xe9rieur :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"const jwt = require('jsonwebtoken');\n\nmodule.exports = (req, res, next) => {\n    try {\n        const token = req.headers.authorization.split(' ')[1];\n        const decodedToken = jwt.verify(token, 'RANDOM_TOKEN_SECRET');\n        const userId = decodedToken.userId;\n        if (req.body.userId && req.body.userId !== userId) {\n            throw 'Invalid user ID';\n        } else {\n            next();\n        }\n    } catch {\n        res.status(401).json({\n            error: new Error('Invalid request!')\n        });\n    }\n};\n")),(0,i.mdx)("p",null,"Dans ce\xa0middleware :"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"\xe9tant donn\xe9 que de nombreux probl\xe8mes peuvent se produire,\xa0nous ins\xe9rons tout \xe0 l'int\xe9rieur d'un bloc\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"try...catch"),"\xa0;"),(0,i.mdx)("li",{parentName:"ul"},"nous extrayons le\xa0",(0,i.mdx)("em",{parentName:"li"},"token")," du header\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"Authorization"),"\xa0de la\xa0requ\xeate\xa0entrante. N'oubliez pas qu'il contiendra \xe9galement le mot-cl\xe9\n",(0,i.mdx)("inlineCode",{parentName:"li"},"Bearer"),". Nous utilisons donc la fonction\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"split"),"\xa0pour r\xe9cup\xe9rer tout apr\xe8s l'espace dans le header. Les erreurs g\xe9n\xe9r\xe9es ici\ns'afficheront dans le bloc\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"catch"),"\xa0;"),(0,i.mdx)("li",{parentName:"ul"},"nous utilisons ensuite la fonction\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"verify"),"\xa0pour d\xe9coder notre ",(0,i.mdx)("em",{parentName:"li"},"token"),". Si celui-ci n'est pas valide, une erreur sera g\xe9n\xe9r\xe9e ;"),(0,i.mdx)("li",{parentName:"ul"},"nous extrayons l'ID utilisateur de notre\xa0",(0,i.mdx)("em",{parentName:"li"},"token")," ;"),(0,i.mdx)("li",{parentName:"ul"},"si la demande contient un ID utilisateur, nous le comparons \xe0 celui extrait du ",(0,i.mdx)("em",{parentName:"li"},"token"),". S'ils sont diff\xe9rents, nous g\xe9n\xe9rons une\nerreur ;"),(0,i.mdx)("li",{parentName:"ul"},"dans le cas contraire, tout\xa0fonctionne et notre utilisateur est authentifi\xe9. Nous passons l'ex\xe9cution \xe0 l'aide de la fonction\n",(0,i.mdx)("inlineCode",{parentName:"li"},"next()"),".")),(0,i.mdx)("p",null,"Maintenant, nous devons appliquer ce ",(0,i.mdx)("em",{parentName:"p"},"middleware")," \xe0 nos routes\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"stuff"),",\xa0qui sont celles \xe0 prot\xe9ger. Dans notre routeur\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"stuff"),",\nnous importons\xa0notre ",(0,i.mdx)("em",{parentName:"p"},"middleware")," et le passons comme argument aux routes \xe0 prot\xe9ger :"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-javascript"},"const express = require('express');\nconst router = express.Router();\n\nconst auth = require('../middleware/auth');\n\nconst stuffCtrl = require('../controllers/stuff');\n\nrouter.get('/', auth, stuffCtrl.getAllStuff);\nrouter.post('/', auth, stuffCtrl.createThing);\nrouter.get('/:id', auth, stuffCtrl.getOneThing);\nrouter.put('/:id', auth, stuffCtrl.modifyThing);\nrouter.delete('/:id', auth, stuffCtrl.deleteThing);\n\nmodule.exports = router;\n")),(0,i.mdx)("p",null,"D\xe9sormais, \xe0 partir du front-end, vous devriez \xeatre capable de vous connecter et d'utiliser normalement l'application. Pour\nv\xe9rifier que les\xa0requ\xeates non autoris\xe9es ne fonctionnent pas, vous pouvez utiliser une application (telle que Postman) pour passer\nune demande sans en-t\xeate\xa0",(0,i.mdx)("inlineCode",{parentName:"p"},"Authorization"),". L'API refusera l'acc\xe8s et renverra une r\xe9ponse 401."),(0,i.mdx)("p",null,"F\xe9licitations ! Votre API impl\xe9mente \xe0 pr\xe9sent l'authentification par\xa0",(0,i.mdx)("em",{parentName:"p"},"token")," et est correctement s\xe9curis\xe9e."),(0,i.mdx)("h3",{id:"en-r\xe9sum\xe9"},"En r\xe9sum\xe9"),(0,i.mdx)("p",null,"Dans cette partie du cours :"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"vous avez ajout\xe9 un mod\xe8le de donn\xe9es\xa0",(0,i.mdx)("inlineCode",{parentName:"li"},"User"),"\xa0afin de stocker les informations utilisateur dans votre base de donn\xe9es ;"),(0,i.mdx)("li",{parentName:"ul"},"vous avez impl\xe9ment\xe9 le\xa0cryptage de mot de passe s\xe9curis\xe9 afin de stocker en toute s\xe9curit\xe9 les mots de passe utilisateur ;"),(0,i.mdx)("li",{parentName:"ul"},"vous avez cr\xe9\xe9 et envoy\xe9 des ",(0,i.mdx)("em",{parentName:"li"},"tokens")," au front-end pour authentifier les\xa0requ\xeates ;"),(0,i.mdx)("li",{parentName:"ul"},"vous avez ajout\xe9 le\xa0",(0,i.mdx)("em",{parentName:"li"},"middleware")," d'authentification pour s\xe9curiser\xa0les routes\xa0dans votre API. De cette fa\xe7on, seules les\nrequ\xeates authentifi\xe9es seront g\xe9r\xe9es.")),(0,i.mdx)("p",null,"Dans la derni\xe8re partie de ce cours, vous en apprendrez plus sur la gestion des fichiers :"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"comment capturer les fichiers provenant du front-end ;"),(0,i.mdx)("li",{parentName:"ul"},"comment les enregistrer sur votre serveur, et"),(0,i.mdx)("li",{parentName:"ul"},"comment les supprimer lorsqu'ils ne sont plus n\xe9cessaires.")),(0,i.mdx)("hr",null),(0,i.mdx)("h2",{id:"quiz--savez-vous-s\xe9curiser-votre-api-"},"Quiz : Savez-vous s\xe9curiser votre API ?"),(0,i.mdx)("p",null,(0,i.mdx)("a",{parentName:"p",href:"https://openclassrooms.com/fr/courses/6390246-passez-au-full-stack-avec-node-js-express-et-mongodb/exercises/3702"},"Savez-vous s\xe9curiser votre API ? - OpenClassrooms")),(0,i.mdx)("h4",{id:"comp\xe9tences-\xe9valu\xe9es"},"Comp\xe9tences \xe9valu\xe9es"),(0,i.mdx)("i",{class:"bi bi-check2-circle"})," Mettre en place un syst\xe8me d'authentification sur une application Express",(0,i.mdx)("hr",null),(0,i.mdx)("h4",{id:"question-1--dans-une-application-express-un-contr\xf4leur"},"Question 1 : Dans une application Express, un contr\xf4leur\u2026"),(0,i.mdx)("i",{class:"bi bi-circle"})," \u2026 enregistre des routes \xe0 l'application.",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-record-circle"})," \u2026 contient la logique m\xe9tier pour une ou plusieurs routes.",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-circle"})," \u2026 enregistre des routes dans un routeur, qu'il exporte ensuite.",(0,i.mdx)("br",null),(0,i.mdx)("br",null),(0,i.mdx)("p",null,(0,i.mdx)("em",{parentName:"p"},"Les contr\xf4leurs contiennent la logique m\xe9tier, et sont g\xe9n\xe9ralement import\xe9s par les routeurs, qui attribuent cette logique aux\nroutes sp\xe9cifiques.")),(0,i.mdx)("hr",null),(0,i.mdx)("h4",{id:"question-2--il-est-g\xe9n\xe9ralement-acceptable-de-stocker-des-mots-de-passe-non-crypt\xe9s-dans-une-base-de-donn\xe9es-si-cette-base-requiert-un-mot-de-passe-dacc\xe8s"},"Question 2 : Il est g\xe9n\xe9ralement acceptable de stocker des mots de passe non crypt\xe9s dans une base de donn\xe9es si cette base requiert un mot de passe d'acc\xe8s."),(0,i.mdx)("i",{class:"bi bi-circle"})," Vrai",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-record-circle"})," Faux",(0,i.mdx)("br",null),(0,i.mdx)("br",null),(0,i.mdx)("p",null,(0,i.mdx)("em",{parentName:"p"},"Il\xa0n'est jamais acceptable de stocker des mots de passe non crypt\xe9s, peu importe la protection de la base de donn\xe9es elle-m\xeame.\nOn ne sait jamais comment les donn\xe9es pourraient fuir et donner un acc\xe8s ouvert aux mots de passe utilisateur.")),(0,i.mdx)("hr",null),(0,i.mdx)("h4",{id:"question-3--que-fait-la-fonctionhashde-bcrypt-"},"Question 3 : Que fait la fonction\xa0",(0,i.mdx)("inlineCode",{parentName:"h4"},"hash"),"\xa0de bcrypt ?"),(0,i.mdx)("i",{class:"bi bi-circle"})," Elle cr\xe9e un string encod\xe9 qui peut \xeatre d\xe9cod\xe9 avec une m\xeame cl\xe9 secr\xe8te.",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-circle"})," Elle crypte un string avec un algorithme simple bidirectionnel.",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-record-circle"})," Elle crypte un string avec un algorithme unidirectionnel, d'une mani\xe8re quasi ind\xe9cryptable.",(0,i.mdx)("br",null),(0,i.mdx)("br",null),(0,i.mdx)("p",null,(0,i.mdx)("em",{parentName:"p"},"Le package bcrpyt permet un cryptage s\xe9curis\xe9 avec un algorithme unidirectionnel.")),(0,i.mdx)("hr",null),(0,i.mdx)("h4",{id:"question-4--avec-des-hashs-bcrypt-comment-sait-on-quand-un-utilisateur-entre-le-bon-mot-de-passe"},"Question 4 : Avec des hashs bcrypt, comment sait-on quand un utilisateur entre le bon mot de passe\xa0?"),(0,i.mdx)("i",{class:"bi bi-circle"})," Pour un string donn\xe9, bcrypt \xe9mettra toujours le m\xeame hash, on peut donc les comparer directement.",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-circle"})," bcrypt d\xe9crypte les deux hashs pour comparer les strings d'origine.",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-record-circle"})," bcrypt sait quand deux hashs diff\xe9rents ont \xe9t\xe9 produits \xe0 partir du m\xeame string d'origine.",(0,i.mdx)("br",null),(0,i.mdx)("br",null),(0,i.mdx)("p",null,(0,i.mdx)("em",{parentName:"p"},"Il est virtuellement impossible de calculer le string d'origine \xe0 partir d'un hash bcrypt, mais le package bcrypt sait comparer\ndeux hashs pour savoir si les deux viennent d'un m\xeame string d'origine (cf.\xa0",(0,i.mdx)("a",{parentName:"em",href:"https://en.wikipedia.org/wiki/P_versus_NP_problem"},"P vs NP problem"),"\npour plus d'informations sur la base math\xe9matique de ce ph\xe9nom\xe8ne).")),(0,i.mdx)("hr",null),(0,i.mdx)("h4",{id:"question-5--un-token-jwt-est-crypt\xe9-avec-un-algorithme-unidirectionnel"},"Question 5 : Un ",(0,i.mdx)("em",{parentName:"h4"},"token")," JWT est crypt\xe9 avec un algorithme unidirectionnel."),(0,i.mdx)("i",{class:"bi bi-circle"})," Vrai",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-record-circle"})," Faux",(0,i.mdx)("br",null),(0,i.mdx)("br",null),(0,i.mdx)("p",null,(0,i.mdx)("em",{parentName:"p"},"Les ",(0,i.mdx)("em",{parentName:"em"},"tokens")," JWT sont encod\xe9s et non crypt\xe9s, et peuvent donc \xeatre d\xe9cod\xe9s avec la cl\xe9 secr\xe8te.")),(0,i.mdx)("hr",null),(0,i.mdx)("h4",{id:"question-6--un-token-jwt-une-fois-sign\xe9-est-valable-ind\xe9finiment"},"Question 6 : Un ",(0,i.mdx)("em",{parentName:"h4"},"token")," JWT, une fois sign\xe9, est valable ind\xe9finiment."),(0,i.mdx)("i",{class:"bi bi-circle"})," Vrai",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-record-circle"})," Faux",(0,i.mdx)("br",null),(0,i.mdx)("br",null),(0,i.mdx)("p",null,(0,i.mdx)("em",{parentName:"p"},"On peut fixer un d\xe9lai d'expiration pour un ",(0,i.mdx)("em",{parentName:"em"},"token")," JWT au moment de sa signature.")),(0,i.mdx)("hr",null),(0,i.mdx)("h4",{id:"question-7--les-tokens-jwt-sont-s\xe9curis\xe9s-parce-que-"},"Question 7 : Les ",(0,i.mdx)("em",{parentName:"h4"},"tokens")," JWT sont s\xe9curis\xe9s parce que :"),(0,i.mdx)("i",{class:"bi bi-circle"})," il n'y a pas de session stock\xe9e sur le serveur qui pourrait \xeatre d\xe9tourn\xe9e.",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-circle"})," leur ",(0,i.mdx)("em",null,"payload")," encod\xe9 peut contenir des donn\xe9es qui permettent de v\xe9rifier que\xa0l'utilisateur connect\xe9 n'utilise pas le ",(0,i.mdx)("em",null,"token")," de quelqu'un d'autre.",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-circle"})," ils sont tr\xe8s difficiles \xe0 fausser sans conna\xeetre la cl\xe9 secr\xe8te.",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-record-circle"})," toutes les r\xe9ponses ci-dessus.",(0,i.mdx)("br",null),(0,i.mdx)("br",null),(0,i.mdx)("p",null,(0,i.mdx)("em",{parentName:"p"},"Les ",(0,i.mdx)("em",{parentName:"em"},"tokens")," JWT ont plusieurs avantages qui les rendent s\xe9curis\xe9s.")),(0,i.mdx)("hr",null),(0,i.mdx)("h4",{id:"question-8--dans-quel-header-de-requ\xeate-envoie-t-on-g\xe9n\xe9ralement-un-token-"},"Question 8 : Dans quel header de requ\xeate envoie-t-on g\xe9n\xe9ralement un ",(0,i.mdx)("em",{parentName:"h4"},"token")," ?"),(0,i.mdx)("i",{class:"bi bi-circle"})," Authentication.",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-circle"})," Access-Control-Allow-Origin.",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-record-circle"})," Authorization.",(0,i.mdx)("br",null),(0,i.mdx)("i",{class:"bi bi-circle"})," X-Requested-With.",(0,i.mdx)("br",null),(0,i.mdx)("br",null),(0,i.mdx)("p",null,(0,i.mdx)("em",{parentName:"p"},"M\xeame s'il n'y a pas de r\xe8gle absolue, la majorit\xe9 des API requi\xe8rent que les ",(0,i.mdx)("em",{parentName:"em"},"tokens")," d'authentification soient envoy\xe9s dans un\nheader Authorization.")))}c.isMDXComponent=!0}}]);